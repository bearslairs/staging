{"version":3,"sources":["privacy.md","terms.md","libs/contextLib.js","components/AuthenticatedRoute.js","components/UnauthenticatedRoute.js","containers/Home.js","containers/Privacy.js","containers/Terms.js","components/LoaderButton.js","libs/hooksLib.js","libs/errorLib.js","containers/Login.js","containers/Settings.js","containers/ChangeEmail.js","containers/ResetPassword.js","containers/ChangePassword.js","containers/Signup.js","containers/CreateBooking.js","contexts/locale.js","containers/BookingList.js","containers/Profile.js","containers/NotFound.js","Routes.js","config.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AppContext","createContext","useAppContext","useContext","AuthenticatedRoute","children","rest","useLocation","pathname","search","isAuthenticated","to","UnauthenticatedRoute","redirect","name","url","window","location","href","replace","regex","RegExp","results","exec","decodeURIComponent","querystring","Home","lairImages","lairIcons","bikeImages","bikeIcons","useState","language","copy","carousel","blurbs","cards","content","setContent","temperature","created_at","Date","now","value","humidity","climate","setClimate","useEffect","fetch","CopyApi","then","responseCopyApi","json","catch","console","log","responseUbiBotApi","container","result","lastValues","JSON","parse","channel","last_values","field1","field2","Container","id","fluid","Row","className","Col","xl","md","theme","Math","round","max","steps","format","size","height","Intl","DateTimeFormat","year","month","day","hour","minute","second","timeZone","slice","map","blurb","blurbIndex","key","title","paragraph","paragraphIndex","length","Image","src","image","text","Button","card","cardIndex","Card","Header","style","backgroundImage","alt","marginTop","Body","Title","description","join","lmargin","padding","features","feature","featureIndex","listStyleType","fontWeight","margin","details","detail","detailIndex","Footer","button","link","width","hostname","bootstrapURLKeys","defaultCenter","lat","lng","defaultZoom","onGoogleApiLoaded","maps","marker","Marker","position","infoWindow","InfoWindow","open","addListener","setZoom","setCenter","getPosition","Privacy","undefined","markdownContent","setMarkdownContent","markdownFile","reader","source","Terms","LoaderButton","isLoading","disabled","props","Spinner","animation","marginRight","useFormFields","initialState","fields","setValues","event","target","onError","error","message","toString","Error","alert","providerId","facilityId","Login","history","useHistory","userHasAuthenticated","setIsLoading","email","password","handleFieldChange","a","preventDefault","Auth","signIn","currentAuthenticatedUser","user","attributes","API","put","body","response","status","customer","updateUserAttributes","push","Form","onSubmit","Group","controlId","Label","Control","autoFocus","type","onChange","Settings","block","ChangeEmail","codeSent","setCodeSent","code","isConfirming","setIsConfirming","isSendingCode","setIsSendingCode","handleUpdateClick","handleConfirmClick","verifyCurrentUserAttributeSubmit","Text","ResetPassword","confirmPassword","confirmed","setConfirmed","handleSendCodeClick","forgotPassword","forgotPasswordSubmit","icon","ChangePassword","oldPassword","isChanging","setIsChanging","currentUser","changePassword","Signup","confirmationCode","newUser","setNewUser","handleSubmit","signUp","username","handleConfirmationSubmit","confirmSignUp","post","data","err","currencySymbol","bgn","CreateBooking","setRedirect","stripe","useStripe","elements","useElements","setUser","userEmail","setUserEmail","_user","startDate","setHours","setDate","getDate","endDate","setMonth","getMonth","vat_number","telephone","address","from","toISOString","months","unit","unitCategory","unitVariant","unitId","paymentFrequency","coupon","termsAccepted","catalog","setCatalog","setUnitVariant","valid","invalid","discount","percent","amount","setCoupon","get","heldUnitExistsForUser","Object","keys","some","_unitCategory","_unitVariant","available","units","_unit","held","for","preselectedCategory","find","preselectedVariant","_variant","preselectedUnitId","sort","b","_fields","split","category","variant","setPrice","priceCalculator","isSubmitting","setIsSubmitting","isVatNumberLookupRunning","setIsVatNumberLookupRunning","touched","setTouched","focusedDate","setFocusedDate","showVatInput","setShowVatInput","validationErrors","setValidationErrors","validationSuccesses","setValidationSuccesses","countryCode","vatNumber","vatEntity","setVatEntity","customMessage","customValidator","validatorRef","useRef","SimpleReactValidator","messages","validators","useValidator","validator","c","percent_off","amount_off","blankPrice","currency","base","subtotal","total","vat","price","product","tax","VAT","percentage","baseWithVat","handleCardSelect","f","handleVatNumberChange","vatNumberFormatValidators","AT","BE","BG","CY","CZ","DE","DK","EE","EL","ES","FI","FR","GB","HU","IE","IT","LT","LU","LV","MT","NL","PL","PT","SE","SI","SK","match","validationErrorsWithVatNumberErrorsRemoved","entity","validationSuccessesWithVatNumberSuccessesRemoved","createSubscription","cancelAt","customerId","paymentMethodId","reservation","defaultTaxRates","priceId","unitCategoryId","unitVariantId","items","subscription","handlePaymentThatRequiresCustomerAction","handleRequiresPaymentMethod","onSubscriptionComplete","invoice","isRetry","paymentIntent","payment_intent","latest_invoice","confirmCardPayment","client_secret","payment_method","localStorage","setItem","retryInvoiceWithNewPaymentMethod","invoiceId","parseStripeAddress","viesAddress","line1","city","state","postal_code","country","createCustomerResponse","phone_number","phone","taxId","cardElement","getElement","CardElement","latestInvoicePaymentIntentStatus","getItem","createPaymentMethod","paymentMethod","validationSuccessesWithCardSuccessesRemoved","validationErrorsWithCardErrorsRemoved","moment","couponCode","e","t","marginBottom","noValidate","Check","label","checked","as","placeholder","isValid","isInvalid","marginLeft","color","current","fieldValid","showMessageFor","required","rows","startsWith","Input","cursor","onClick","dimensions","locker","depth","includes","filter","u","inline","displayFormat","date","onDateChange","add","focused","onFocusChange","min","floor","maxTenancyInMonths","parseInt","textDecoration","Number","parseFloat","toFixed","Table","colSpan","options","fontFamily","fontSmoothing","fontSize","iconColor","allValid","Tabs","activeKey","onSelect","handleTabSelect","Tab","eventKey","CardDeck","Img","opacity","prop","door","locale","symbol","BookingList","account","setAccount","reservations","setReservations","activeReservation","setActiveReservation","_reservation","_unitCategoryName","_unitVariantName","created","Accordion","rI","Toggle","Collapse","invoice_pdf","hosted_invoice_url","rel","charges","receipt_url","lines","line","subscription_item","period","start","end","nickname","quantity","unit_amount","total_tax_amounts","rate","default_tax_rates","_rate","tax_rate","display_name","jurisdiction","paid","status_transitions","paid_at","amount_paid","Profile","NotFound","Routes","exact","path","config","STRIPE_KEY","apiGateway","REGION","URL","env","s3","BUCKET","cognito","USER_POOL_ID","APP_CLIENT_ID","IDENTITY_POOL_ID","environment","App","textMessage","encodeURI","coordinates","latitude","longitude","waypoints","whatsappLink","isMobile","isAndroid","isFirefox","isSafari","viberLink","mapsLink","wp","isAuthenticating","setIsAuthenticating","currentSession","signOut","onLoad","Navbar","collapseOnSelect","expand","aria-controls","Nav","NavItem","OverlayTrigger","placement","delay","show","hide","overlay","backgroundColor","NavDropdown","drop","Item","Divider","Provider","Boolean","library","faPhone","faFacebook","faWhatsappSquare","faViber","faFilePdf","faMapMarkedAlt","farUser","fasUser","stripePromise","loadStripe","Amplify","configure","mandatorySignIn","region","userPoolId","identityPoolId","userPoolWebClientId","Storage","bucket","endpoints","endpoint","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d3ea21d9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/privacy.bf6275f6.md\";","module.exports = __webpack_public_path__ + \"static/media/terms.a65f2484.md\";","import { useContext, createContext } from 'react';\n\nexport const AppContext = createContext(null);\n\nexport function useAppContext() {\n  return useContext(AppContext);\n}\n","import React from 'react';\nimport { Route, Redirect, useLocation } from 'react-router-dom';\nimport { useAppContext } from '../libs/contextLib';\n\nexport default function AuthenticatedRoute({ children, ...rest }) {\n  const { pathname, search } = useLocation();\n  const { isAuthenticated } = useAppContext();\n  return (\n    <Route {...rest}>\n      {isAuthenticated ? (\n        children\n      ) : (\n        <Redirect to={\n          `/login?redirect=${pathname}${search}`\n        } />\n      )}\n    </Route>\n  );\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useAppContext } from '../libs/contextLib';\n\nfunction querystring(name, url = window.location.href) {\n  name = name.replace(/[[]]/g, \"\\\\$&\");\n\n  const regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\", \"i\");\n  const results = regex.exec(url);\n\n  if (!results) {\n    return null;\n  }\n  if (!results[2]) {\n    return \"\";\n  }\n\n  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n}\n\nexport default function UnauthenticatedRoute({ children, ...rest }) {\n  const { isAuthenticated } = useAppContext();\n  const redirect = querystring(\"redirect\");\n  return (\n    <Route {...rest}>\n      {!isAuthenticated ? (\n        children\n      ) : (\n        <Redirect to={redirect === \"\" || redirect === null ? \"/\" : redirect} />\n      )}\n    </Route>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Image from 'react-bootstrap/Image';\nimport GoogleMapReact from 'google-map-react';\nimport Thermometer from 'react-thermometer-component';\n\nexport default function Home() {\n  const lairImages = ['/lair-baby.png', '/lair-mama.png', '/lair-papa.png'];\n  const lairIcons = ['/lair-baby-icon.png', '/lair-mama-icon.png', '/lair-papa-icon.png'];\n  const bikeImages = ['/bike-rack.png', '/bike-small.png', '/bike-large.png'];\n  const bikeIcons = ['/bike-rack-icon.png', '/bike-small-icon.png', '/bike-large-icon.png'];\n\n  const CopyApi = 'https://raw.githubusercontent.com/bearslairs/bearslairs-data/master/copy';\n  const UbiBotApi = 'https://api.ubibot.io/channels/13604?api_key=609210eb2306427a88d662d48ddb578d';\n  const [content, setContent] = useState({ language: 'en', copy: { carousel: [], blurbs: [], cards: []}});\n  const [climate, setClimate] = useState({ temperature: { created_at: Date.now(), value: 0 }, humidity: { created_at: Date.now(), value: 0 }});\n\n  useEffect(() => {\n    fetch(CopyApi + '/' + content.language + '/home.json')\n      .then(responseCopyApi => responseCopyApi.json())\n      .then((copy) => {\n        setContent({\n          language: content.language,\n          copy: copy\n        });\n      })\n      .catch(console.log);\n  }, [content]);\n  useEffect(() => {\n    fetch(UbiBotApi)\n      .then(responseUbiBotApi => responseUbiBotApi.json())\n      .then((container) => {\n        if (container.result === 'success') {\n          let lastValues = JSON.parse(container.channel.last_values);\n          setClimate({\n            temperature: lastValues.field1,\n            humidity: lastValues.field2\n          });\n        }\n      })\n      .catch(console.log);\n  }, [climate]);\n\n  return (\n    <>\n      <Container id=\"header\" fluid>\n        <h2>\n          secure self storage in bansko<br />\n          with access at your convenience\n        </h2>\n      </Container>\n      <Container id=\"environment\">\n        <h3>\n          real-time environment monitoring\n        </h3>\n        <p>\n          we monitor temperature, humidity and light within the facility and publish those readings at\n          &nbsp;\n          <a href=\"https://space.ubibot.io/space/user/device/channel-id/13604\">\n            ubibot.io/bearslairs-bansko\n          </a>,\n          <br />\n          so our customers can stay informed of the environmetal conditions of their self-storage.\n          The latest readings taken were:\n        </p>\n        <Row className=\"justify-content-xl-center justify-content-md-center\">\n          <Col xl=\"auto\" md=\"auto\">\n            <Thermometer\n              theme=\"dark\"\n              value={(Math.round(climate.temperature.value * 10) / 10)}\n              max={(climate.temperature.value * 1.3)}\n              steps=\"3\"\n              format=\"°C\"\n              size=\"large\"\n              height=\"200\"\n            />\n          </Col>\n          <Col xl=\"auto\" md=\"auto\">\n            <h4>temperature</h4>\n            {\n              new Intl.DateTimeFormat(\"en-GB\", {\n                year: \"numeric\",\n                month: \"long\",\n                day: \"2-digit\",\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZone: 'Europe/Sofia'\n              }).format(new Date(climate.temperature.created_at))\n            }:&nbsp;\n            <strong>{(Math.round(climate.temperature.value * 10) / 10)}°C</strong>\n            <h4>humidity</h4>\n            {\n              new Intl.DateTimeFormat(\"en-GB\", {\n                year: \"numeric\",\n                month: \"long\",\n                day: \"2-digit\",\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZone: 'Europe/Sofia'\n              }).format(new Date(climate.humidity.created_at))\n            }:&nbsp;\n            <strong>{climate.humidity.value}%</strong>\n          </Col>\n        </Row>\n      </Container>\n      <Container id=\"about\" fluid>\n        {\n          content.copy.blurbs.slice(0, 1).map((blurb, blurbIndex) => (\n            <Container key={blurbIndex}>\n              <h3>{blurb.title}</h3>\n              <Row className=\"justify-content-xl-center justify-content-md-center\">\n              {\n                blurb.copy.map((paragraph, paragraphIndex) => (\n                  <Col xl={(12 / blurb.copy.length)} key={paragraphIndex}>\n                    <Image src={paragraph.image} />\n                    <p>{paragraph.text}</p>\n                  </Col>\n                ))\n              }\n              </Row>\n            </Container>\n          ))\n        }\n      </Container>\n      <Container id=\"security\" fluid>\n        <Container>\n          <Row className=\"justify-content-xl-center justify-content-md-center\">\n            {\n              content.copy.blurbs.slice(1, 2).map((blurb, blurbIndex) => (\n                <Col xl={7} key={blurbIndex}>\n                  <h3>{blurb.title}</h3>\n                  {\n                    blurb.copy.map((paragraph, paragraphIndex) => (\n                      <p key={paragraphIndex}>\n                        {paragraph}\n                      </p>\n                    ))\n                  }\n                  <LinkContainer to=\"/booking/new\">\n                    <Button>book now</Button>\n                  </LinkContainer>\n                </Col>\n              ))\n            }\n          </Row>\n        </Container>\n      </Container>\n      <Container id=\"lair\">\n        <h3>\n          choose your lair\n        </h3>\n        <Row className=\"justify-content-xl-center justify-content-md-center\">\n          {\n            content.copy.cards.slice(0, 3).map((card, cardIndex) => (\n              <Col key={cardIndex}>\n              <Card className=\"h-100\">\n                <Card.Header>\n                  {card.title}\n                </Card.Header>\n                <div style={{height: '200px', backgroundImage: 'url(' + lairImages[cardIndex] + ')'}}>\n                  <Image src={lairIcons[cardIndex]} alt={card.image.alt} style={{marginTop: '25px'}} />\n                </div>\n                <Card.Body>\n                  <Card.Title>\n                    {card.description.join(' ')}\n                  </Card.Title>\n                  <hr />\n                  <ul style={{lmargin: 0, padding: 0}}>\n                    {\n                      card.features.map((feature, featureIndex) => (\n                        <li key={featureIndex} style={{listStyleType: 'none', fontWeight: 600, margin: 0, padding: 0}}>\n                          {feature.text}\n                          <ul style={{lmargin: 0, padding: 0}}>\n                            {\n                              feature.details.map((detail, detailIndex) => (\n                                <li key={detailIndex} style={{listStyleType: 'none', fontWeight: 'normal', margin: 0, padding: 0}}>\n                                  {detail}\n                                </li>\n                              ))\n                            }\n                          </ul>\n                        </li>\n                      ))\n                    }\n                  </ul>\n                </Card.Body>\n                <Card.Footer>\n                  <LinkContainer to={card.button.link}>\n                    <Button>{card.button.text}</Button>\n                  </LinkContainer>\n                </Card.Footer>\n              </Card>\n              </Col>\n            ))\n          }\n        </Row>\n      </Container>\n      <Container id=\"adaptive\" fluid>\n        {\n          content.copy.blurbs.slice(2, 3).map((blurb, blurbIndex) => (\n            <Container key={blurbIndex}>\n              <h3>{blurb.title}</h3>\n              <Row className=\"justify-content-xl-center justify-content-md-center\">\n                <Col xl={7}>\n                  <p>{blurb.copy[0]}</p>\n                </Col>\n              </Row>\n              <blockquote className=\"blockquote\">\n                <p>{blurb.copy[1]}</p>\n              </blockquote>\n            </Container>\n          ))\n        }\n      </Container>\n      <Container id=\"bike\" fluid>\n        {\n          content.copy.blurbs.slice(3, 4).map((blurb, blurbIndex) => (\n            <Container key={blurbIndex}>\n              <h3>{blurb.title}</h3>\n              <Row className=\"justify-content-xl-center justify-content-md-center\">\n                <Col xl={8}>\n                  <p>{blurb.copy[0]}</p>\n                </Col>\n              </Row>\n            </Container>\n          ))\n        }\n        <Container>\n          <Row>\n            {\n              content.copy.cards.slice(3, 6).map((card, cardIndex) => (\n                <Col key={cardIndex}>\n                  <Card className=\"h-100\">\n                    <Card.Header>\n                      {card.title}\n                    </Card.Header>\n                    <div style={{height: '200px', backgroundImage: 'url(' + bikeImages[cardIndex] + ')'}}>\n                      <Image src={bikeIcons[cardIndex]} alt={card.image.alt} style={{marginTop: '25px'}} />\n                    </div>\n                    <Card.Body>\n                      <Card.Title>\n                        {card.description.join(' ')}\n                      </Card.Title>\n                      <hr />\n                      <ul style={{lmargin: 0, padding: 0}}>\n                        {\n                          card.features.map((feature, featureIndex) => (\n                            <li key={featureIndex} style={{listStyleType: 'none', fontWeight: 600, margin: 0, padding: 0}}>\n                              {feature.text}\n                              <ul style={{margin: 0, padding: 0}}>\n                                {\n                                  feature.details.map((detail, detailIndex) => (\n                                    <li key={detailIndex} style={{listStyleType: 'none', fontWeight: 'normal', margin: 0, padding: 0}}>\n                                      {detail}\n                                    </li>\n                                  ))\n                                }\n                              </ul>\n                            </li>\n                          ))\n                        }\n                      </ul>\n                    </Card.Body>\n                    <Card.Footer>\n                      <LinkContainer to={card.button.link}>\n                        <Button>{card.button.text}</Button>\n                      </LinkContainer>\n                    </Card.Footer>\n                  </Card>\n                </Col>\n              ))\n            }\n          </Row>\n        </Container>\n      </Container>\n      <Container id=\"facility\" fluid>\n        {\n          content.copy.blurbs.slice(4, 5).map((blurb, blurbIndex) => (\n            <Container key={blurbIndex}>\n              <h3>{blurb.title}</h3>\n              <Row className=\"justify-content-xl-center justify-content-md-center\">\n              {\n                blurb.copy.map((paragraph, paragraphIndex) => (\n                  <Col xl={(12 / blurb.copy.length)} key={paragraphIndex}>\n                    <Image src={paragraph.image} />\n                    <p>{paragraph.text}</p>\n                  </Col>\n                ))\n              }\n              </Row>\n              <Row className=\"justify-content-xl-center justify-content-md-center\">\n                <Col xl=\"auto\" md=\"auto\">\n                  <LinkContainer to=\"/booking/new\">\n                    <Button>book now</Button>\n                  </LinkContainer>\n                </Col>\n              </Row>\n            </Container>\n          ))\n        }\n      </Container>\n      <Container id=\"map\" fluid>\n        <div style={{ height: '650px', width: '100%' }}>\n          {\n            (window.location.hostname === 'localhost')\n              ? null\n              : (\n                  <GoogleMapReact\n                    bootstrapURLKeys={{ key: 'AIzaSyCKw8by28pNI5tlimezyyjgtXz_Nvkq2-Y' }}\n                    defaultCenter={{ lat: 41.820582, lng: 23.478257 }}\n                    defaultZoom={ 14 }\n                    onGoogleApiLoaded={({map, maps}) => {\n                      let marker = new maps.Marker({\n                        position: { lat: 41.820582, lng: 23.478257 },\n                        map,\n                        title: 'Bears Lairs, Bansko',\n                        description: 'secure, self-storage in bansko with access at your convenience',\n                        link: {\n                          url: 'https://www.google.com/maps/place/Bears+Lairs/@41.8223813,23.4681867,15z/data=!4m5!3m4!1s0x0:0xadd4ea4c0b9a3216!8m2!3d41.820631!4d23.478215',\n                          text: 'maps.google.com/Bears+Lairs'\n                        }\n                      });\n                      let infoWindow = new maps.InfoWindow({\n                        content: '<h4><img src=\"favicon-32x32.png\" style=\"margin-right: 6px;\" class=\"rounded-circle\" />' + marker.title + '</h4><p>' + marker.description + '<br /><a href=\"' + marker.link.url + '\">' + marker.link.text + '</a></p>'\n                      });\n                      infoWindow.open(map, marker);\n                      marker.addListener('click', () => {\n                        map.setZoom(14);\n                        map.setCenter(marker.getPosition());\n                        infoWindow.open(map, marker);\n                      });\n                    }} />\n                )\n          }\n        </div>\n      </Container>\n    </>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport Container from 'react-bootstrap/Container';\nimport markdownFile from '../privacy.md';\n\nexport default function Privacy() {\n  const [markdownContent, setMarkdownContent] = useState(undefined);\n  useEffect(() => { fetch(markdownFile).then(reader => reader.text()).then(setMarkdownContent); }, []);\n  return (\n    <Container id=\"policy\">\n      <ReactMarkdown source={markdownContent} />\n    </Container>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport Container from 'react-bootstrap/Container';\nimport markdownFile from '../terms.md';\n\nexport default function Terms() {\n  const [markdownContent, setMarkdownContent] = useState(undefined);\n  useEffect(() => { fetch(markdownFile).then(reader => reader.text()).then(setMarkdownContent); }, []);\n  return (\n    <Container id=\"policy\">\n      <ReactMarkdown source={markdownContent} />\n    </Container>\n  );\n}","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Spinner from 'react-bootstrap/Spinner';\n\nexport default function LoaderButton({\n  isLoading,\n  disabled = false,\n  ...props\n}) {\n  return (\n    <Button disabled={disabled || isLoading} {...props}>\n      {isLoading && <Spinner animation=\"border\" size=\"sm\" style={{marginRight: '0.7em'}} />}\n      {props.children}\n    </Button>\n  );\n}\n","import { useState } from 'react';\n\nexport function useFormFields(initialState) {\n  const [fields, setValues] = useState(initialState);\n\n  return [\n    fields,\n    function(event) {\n      setValues({\n        ...fields,\n        [event.target.id]: event.target.value\n      });\n    }\n  ];\n}\n","export function onError(error) {\n  let message = error.toString();\n\n  // Auth errors\n  if (!(error instanceof Error) && error.message) {\n    message = error.message;\n  }\n\n  alert(message);\n}\n","import React, { useState } from 'react';\nimport { API, Auth } from 'aws-amplify';\nimport { Link, useHistory } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport LoaderButton from '../components/LoaderButton';\nimport { useAppContext } from '../libs/contextLib';\nimport { useFormFields } from '../libs/hooksLib';\nimport { onError } from '../libs/errorLib';\n\n\nconst providerId = 'e986bca0-ff41-11ea-8196-af25e422bd08';\nconst facilityId = 'ff1694c0-ffa8-11ea-bfbc-4f270cb046f3';\n\n\nexport default function Login() {\n  const history = useHistory();\n  const { userHasAuthenticated } = useAppContext();\n  const [isLoading, setIsLoading] = useState(false);\n  const [fields, handleFieldChange] = useFormFields({ email: '', password: '' });\n\n  function validateForm() {\n    return fields.email.length > 0 && fields.password.length > 0;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setIsLoading(true);\n    try {\n      await Auth.signIn(fields.email, fields.password);\n      userHasAuthenticated(true);\n\n      // create and associate a stripe customer id if user doesn't have one\n      let user = await Auth.currentAuthenticatedUser();\n      let { attributes } = user;\n      if (!('custom:stripe_customer_id' in attributes)) {\n        API.put('limelockers', `/${providerId}/${facilityId}/customer`, { body: { email: fields.email } })\n          .then(async(response) => {\n            if (response.status && response.customer && response.customer.id) {\n              await Auth.updateUserAttributes(user, { 'custom:stripe_customer_id': response.customer.id });\n            } else if (response.error) {\n              console.log(response.error);\n            }\n          });\n      }\n\n      history.push('/');\n    } catch (e) {\n      onError(e);\n      setIsLoading(false);\n    }\n  }\n\n\n  return (\n    <Card id=\"login\">\n      <Card.Header>\n        Already a Customer?\n        <span className=\"float-right\">Log In</span>\n      </Card.Header>\n      <Card.Body>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control\n              autoFocus\n              type=\"email\"\n              value={fields.email}\n              onChange={handleFieldChange} />\n          </Form.Group>\n          <Form.Group controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              value={fields.password}\n              onChange={handleFieldChange} />\n          </Form.Group>\n          <LoaderButton\n            className=\"float-right\"\n            type=\"submit\"\n            isLoading={isLoading}\n            disabled={!validateForm()}>\n            log-in\n          </LoaderButton>\n          <Link to=\"/login/reset\">forgot password?</Link>\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n}\n","import React from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport LoaderButton from '../components/LoaderButton';\n\nexport default function Settings() {\n  return (\n    <div className=\"Settings\">\n      <LinkContainer to=\"/settings/password\">\n        <LoaderButton block>\n          Change Password\n        </LoaderButton>\n      </LinkContainer>\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport { Auth } from 'aws-amplify';\nimport { useHistory } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport LoaderButton from '../components/LoaderButton';\nimport { useFormFields } from '../libs/hooksLib';\nimport { onError } from '../libs/errorLib';\n\nexport default function ChangeEmail() {\n  const history = useHistory();\n  const [codeSent, setCodeSent] = useState(false);\n  const [fields, handleFieldChange] = useFormFields({\n    code: '',\n    email: '',\n  });\n  const [isConfirming, setIsConfirming] = useState(false);\n  const [isSendingCode, setIsSendingCode] = useState(false);\n\n  function validateEmailForm() {\n    return fields.email.length > 0;\n  }\n\n  function validateConfirmForm() {\n    return fields.code.length > 0;\n  }\n\n  async function handleUpdateClick(event) {\n    event.preventDefault();\n    setIsSendingCode(true);\n    try {\n      const user = await Auth.currentAuthenticatedUser();\n      await Auth.updateUserAttributes(user, { email: fields.email });\n      setCodeSent(true);\n    } catch (error) {\n      onError(error);\n      setIsSendingCode(false);\n    }\n  }\n\n  async function handleConfirmClick(event) {\n    event.preventDefault();\n    setIsConfirming(true);\n    try {\n      await Auth.verifyCurrentUserAttributeSubmit('email', fields.code);\n      history.push('/settings');\n    } catch (error) {\n      onError(error);\n      setIsConfirming(false);\n    }\n  }\n\n  function renderUpdateForm() {\n    return (\n      <Form onSubmit={handleUpdateClick}>\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"email\"\n            value={fields.email}\n            onChange={handleFieldChange} />\n        </Form.Group>\n        <LoaderButton\n          block\n          type=\"submit\"\n          isLoading={isSendingCode}\n          disabled={!validateEmailForm()}>\n          Update Email\n        </LoaderButton>\n      </Form>\n    );\n  }\n\n  function renderConfirmationForm() {\n    return (\n      <Form onSubmit={handleConfirmClick}>\n        <Form.Group controlId=\"code\">\n          <Form.Label>Confirmation Code</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"tel\"\n            value={fields.code}\n            onChange={handleFieldChange} />\n          <Form.Text>\n            Please check your email ({fields.email}) for the confirmation code.\n          </Form.Text>\n        </Form.Group>\n        <LoaderButton\n          block\n          type=\"submit\"\n          isLoading={isConfirming}\n          disabled={!validateConfirmForm()}>\n          Confirm\n        </LoaderButton>\n      </Form>\n    );\n  }\n\n  return (\n    <div>\n      {!codeSent ? renderUpdateForm() : renderConfirmationForm()}\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport { Auth } from 'aws-amplify';\nimport { Link } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n//import { faOk } from '@fortawesome/free-solid-svg-icons'\nimport LoaderButton from '../components/LoaderButton';\nimport { useFormFields } from '../libs/hooksLib';\nimport { onError } from '../libs/errorLib';\n\nexport default function ResetPassword() {\n  const [fields, handleFieldChange] = useFormFields({\n    code: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  });\n  const [codeSent, setCodeSent] = useState(false);\n  const [confirmed, setConfirmed] = useState(false);\n  const [isConfirming, setIsConfirming] = useState(false);\n  const [isSendingCode, setIsSendingCode] = useState(false);\n\n  function validateCodeForm() {\n    return fields.email.length > 0;\n  }\n\n  function validateResetForm() {\n    return (\n      fields.code.length > 0 &&\n      fields.password.length > 0 &&\n      fields.password === fields.confirmPassword\n    );\n  }\n\n  async function handleSendCodeClick(event) {\n    event.preventDefault();\n\n    setIsSendingCode(true);\n\n    try {\n      await Auth.forgotPassword(fields.email);\n      setCodeSent(true);\n    } catch (error) {\n      onError(error);\n      setIsSendingCode(false);\n    }\n  }\n\n  async function handleConfirmClick(event) {\n    event.preventDefault();\n\n    setIsConfirming(true);\n\n    try {\n      await Auth.forgotPasswordSubmit(\n        fields.email,\n        fields.code,\n        fields.password\n      );\n      setConfirmed(true);\n    } catch (error) {\n      onError(error);\n      setIsConfirming(false);\n    }\n  }\n\n  function renderRequestCodeForm() {\n    return (\n      <form onSubmit={handleSendCodeClick}>\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"email\"\n            value={fields.email}\n            onChange={handleFieldChange} />\n        </Form.Group>\n        <LoaderButton\n          block\n          type=\"submit\"\n          isLoading={isSendingCode}\n          disabled={!validateCodeForm()}>\n          Send Confirmation\n        </LoaderButton>\n      </form>\n    );\n  }\n\n  function renderConfirmationForm() {\n    return (\n      <form onSubmit={handleConfirmClick}>\n        <Form.Group controlId=\"code\">\n          <Form.Label>Confirmation Code</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"tel\"\n            value={fields.code}\n            onChange={handleFieldChange} />\n          <Form.Text>\n            Please check your email ({fields.email}) for the confirmation code.\n          </Form.Text>\n        </Form.Group>\n        <hr />\n        <Form.Group controlId=\"password\">\n          <Form.Label>New Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={fields.password}\n            onChange={handleFieldChange} />\n        </Form.Group>\n        <Form.Group controlId=\"confirmPassword\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={fields.confirmPassword}\n            onChange={handleFieldChange} />\n        </Form.Group>\n        <LoaderButton\n          block\n          type=\"submit\"\n          isLoading={isConfirming}\n          disabled={!validateResetForm()}>\n          Confirm\n        </LoaderButton>\n      </form>\n    );\n  }\n\n  function renderSuccessMessage() {\n    return (\n      <div className=\"success\">\n        <FontAwesomeIcon icon=\"ok\" />\n        <p>Your password has been reset.</p>\n        <p>\n          <Link to=\"/login\">\n            Click here to login with your new credentials.\n          </Link>\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <Container id=\"password\">\n      <h2>password reset</h2>\n      {!codeSent\n        ? renderRequestCodeForm()\n        : !confirmed\n        ? renderConfirmationForm()\n        : renderSuccessMessage()}\n    </Container>\n  );\n}","import React, { useState } from 'react';\nimport { Auth } from 'aws-amplify';\nimport { useHistory } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport LoaderButton from '../components/LoaderButton';\nimport { useFormFields } from '../libs/hooksLib';\nimport { onError } from '../libs/errorLib';\n\nexport default function ChangePassword() {\n  const history = useHistory();\n  const [fields, handleFieldChange] = useFormFields({\n    password: '',\n    oldPassword: '',\n    confirmPassword: '',\n  });\n  const [isChanging, setIsChanging] = useState(false);\n\n  function validateForm() {\n    return (\n      fields.oldPassword.length > 0 &&\n      fields.password.length > 0 &&\n      fields.password === fields.confirmPassword\n    );\n  }\n\n  async function handleChangeClick(event) {\n    event.preventDefault();\n    setIsChanging(true);\n    try {\n      const currentUser = await Auth.currentAuthenticatedUser();\n      await Auth.changePassword(\n        currentUser,\n        fields.oldPassword,\n        fields.password\n      );\n\n      history.push('/settings');\n    } catch (error) {\n      onError(error);\n      setIsChanging(false);\n    }\n  }\n\n  return (\n    <Container id=\"password\">\n      <Form onSubmit={handleChangeClick}>\n        <Form.Group controlId=\"oldPassword\">\n          <Form.Label>Old Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={handleFieldChange}\n            value={fields.oldPassword} />\n        </Form.Group>\n        <hr />\n        <Form.Group controlId=\"password\">\n          <Form.Label>New Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={handleFieldChange}\n            value={fields.password} />\n        </Form.Group>\n        <Form.Group controlId=\"confirmPassword\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={handleFieldChange}\n            value={fields.confirmPassword} />\n        </Form.Group>\n        <LoaderButton\n          block\n          type=\"submit\"\n          disabled={!validateForm()}\n          isLoading={isChanging}>\n          Change Password\n        </LoaderButton>\n      </Form>\n    </Container>\n  );\n}","import React, { useState } from 'react';\nimport { API, Auth } from 'aws-amplify';\nimport { useHistory } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport LoaderButton from '../components/LoaderButton';\nimport { useAppContext } from '../libs/contextLib';\nimport { useFormFields } from '../libs/hooksLib';\nimport { onError } from '../libs/errorLib';\n\nexport default function Signup() {\n  const [fields, handleFieldChange] = useFormFields({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    confirmationCode: '',\n  });\n  const history = useHistory();\n  const [newUser, setNewUser] = useState(null);\n  const { userHasAuthenticated } = useAppContext();\n  const [isLoading, setIsLoading] = useState(false);\n\n  function validateForm() {\n    return (\n      fields.email.length > 0 &&\n      fields.password.length > 0 &&\n      fields.password === fields.confirmPassword\n    );\n  }\n\n  function validateConfirmationForm() {\n    return fields.confirmationCode.length > 0;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setIsLoading(true);\n    try {\n      const newUser = await Auth.signUp({\n        username: fields.email,\n        password: fields.password\n      });\n      setIsLoading(false);\n      setNewUser(newUser);\n    } catch (e) {\n      onError(e);\n      setIsLoading(false);\n    }\n  }\n\n  async function handleConfirmationSubmit(event) {\n    event.preventDefault();\n    setIsLoading(true);\n    try {\n      await Auth.confirmSignUp(fields.email, fields.confirmationCode);\n      await Auth.signIn(fields.email, fields.password);\n      userHasAuthenticated(true);\n      API.post('billing/customer/create', '/billing/customer/create', { body: { email: fields.email, facilityId: '7edad966-198d-4ee2-8802-02f188e8f62c' } })\n        .then(async(response) => {\n          if (response.status && response.customer && response.customer.id) {\n            Auth.currentAuthenticatedUser()\n              .then(user => Auth.updateUserAttributes(user, { 'custom:stripe_customer_id': response.customer.id }))\n              .then(data => console.log(data))\n              .catch(err => console.log(err));\n          } else if (response.error) {\n            console.log(response.error);\n          }\n        });\n      history.push(\"/\");\n    } catch (e) {\n      onError(e);\n      setIsLoading(false);\n    }\n  }\n\n  function renderConfirmationForm() {\n    return (\n      <Form onSubmit={handleConfirmationSubmit}>\n        <Form.Group controlId=\"confirmationCode\">\n          <Form.Label>Confirmation Code</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"tel\"\n            onChange={handleFieldChange}\n            value={fields.confirmationCode} />\n          <Form.Text>Please check your email for the code.</Form.Text>\n        </Form.Group>\n        <LoaderButton\n          block\n          type=\"submit\"\n          isLoading={isLoading}\n          disabled={!validateConfirmationForm()}>\n          verify\n        </LoaderButton>\n      </Form>\n    );\n  }\n\n  function renderForm() {\n    return (\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"email\"\n            value={fields.email}\n            onChange={handleFieldChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={fields.password}\n            onChange={handleFieldChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"confirmPassword\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={handleFieldChange}\n            value={fields.confirmPassword}\n          />\n        </Form.Group>\n        <LoaderButton\n          className=\"float-right\"\n          type=\"submit\"\n          isLoading={isLoading}\n          disabled={!validateForm()}>\n          sign-up\n        </LoaderButton>\n      </Form>\n    );\n  }\n\n  return (\n      <Card id=\"signup\">\n        <Card.Header>\n          New Customer?\n          <span className=\"float-right\">Sign Up</span>\n        </Card.Header>\n        <Card.Body>\n          {newUser === null ? renderForm() : renderConfirmationForm()}\n        </Card.Body>\n      </Card>\n  );\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport Table from 'react-bootstrap/Table';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Card from 'react-bootstrap/Card';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport Spinner from 'react-bootstrap/Spinner';\nimport LoaderButton from '../components/LoaderButton';\nimport 'react-dates/initialize';\nimport { SingleDatePicker } from 'react-dates';\nimport 'react-dates/lib/css/_datepicker.css';\nimport moment from 'moment';\nimport { API, Auth } from 'aws-amplify';\nimport SimpleReactValidator from 'simple-react-validator';\nimport { useStripe, useElements, CardElement } from '@stripe/react-stripe-js';\n\n\nconst providerId = 'e986bca0-ff41-11ea-8196-af25e422bd08';\nconst facilityId = 'ff1694c0-ffa8-11ea-bfbc-4f270cb046f3';\nconst maxTenancyInMonths = 36;\nconst currency = 'bgn';\nconst currencySymbol = {\n  bgn: 'лв'\n};\n\n\nexport default function CreateBooking() {\n  const [redirect, setRedirect] = useState(undefined);\n  const stripe = useStripe();\n  const elements = useElements();\n  const [user, setUser] = useState(undefined);\n  const [userEmail, setUserEmail] = useState(undefined);\n  useEffect(() => {\n    if (!user) {\n      Auth.currentAuthenticatedUser()\n        .then(_user => {\n          setUserEmail(_user.attributes.email);\n          setUser(_user);\n        })\n        .catch(console.log);\n    }\n  });\n\n  let startDate = new Date();\n  startDate.setHours(14,0,0,0);\n  startDate.setDate(startDate.getDate() + 1);\n  let endDate = new Date();\n  endDate.setHours(12,0,0,0);\n  endDate.setMonth(startDate.getMonth() + 12);\n\n  const [fields, handleFieldChange] = useState({\n    name: '',\n    vat_number: '',\n    email: userEmail,\n    telephone: '',\n    address: '',\n    from: startDate.toISOString(),\n    months: 12,\n    to: endDate.toISOString(),\n    unit: undefined,\n    unitCategory: undefined,\n    unitVariant: undefined,\n    unitId: undefined,\n    paymentFrequency: 'month',\n    coupon: '',\n    termsAccepted: false\n  });\n\n  const [catalog, setCatalog] = useState(undefined);\n  const [unitVariant, setUnitVariant] = useState(undefined);\n  const [coupon, setCoupon] = useState({ code: undefined, name: undefined, valid: undefined, invalid: undefined, message: undefined, discount: { percent: 0, amount: 0 } });\n\n  /* update the catalog\n     - using availability from either:\n       - the default rental time period\n       - any from/to dates that have changed\n     - preselect a category, variant and unit using either:\n       - any unit that is held for the user\n       - the first available unit in the preselected variant\n     executes after:\n     - the user email is determined\n     - the rental time period has changed\n  */\n  useEffect(() => {\n    if (!!userEmail) {\n      API.get('limelockers', `/${providerId}/${facilityId}/catalog?from=${fields.from}&to=${fields.to}`)\n        .then(response => {\n          setIsLoading(false);\n          if (!!response.status && !!response.catalog) {\n            const heldUnitExistsForUser = Object.keys(response.catalog).some(\n              _unitCategory => Object.keys(response.catalog[_unitCategory]).some(\n                _unitVariant => response.catalog[_unitCategory][_unitVariant].available.units.some(\n                  _unit => !!_unit.held && _unit.held.for === userEmail)));\n            const preselectedCategory = heldUnitExistsForUser\n              ? Object.keys(response.catalog).find(\n                  _unitCategory => Object.keys(response.catalog[_unitCategory]).some(\n                    _unitVariant => response.catalog[_unitCategory][_unitVariant].available.units.some(\n                      _unit => !!_unit.held && _unit.held.for === userEmail)))\n              : Object.keys(response.catalog)[0];\n            const preselectedVariant = heldUnitExistsForUser\n              ? Object.keys(response.catalog[preselectedCategory]).find(\n                    _unitVariant => response.catalog[preselectedCategory][_unitVariant].available.units.some(\n                      _unit => !!_unit.held && _unit.held.for === userEmail))\n              : Object.keys(response.catalog[preselectedCategory]).find(_variant => !!response.catalog[preselectedCategory][_variant].available.units.length);\n            const preselectedUnitId = heldUnitExistsForUser\n              ? response.catalog[preselectedCategory][preselectedVariant].available.units.find(_unit => !!_unit.held && _unit.held.for === userEmail).unitId\n              : !!response.catalog[preselectedCategory][preselectedVariant].available.units.length\n                ? response.catalog[preselectedCategory][preselectedVariant].available.units.sort((a, b) => (a.name > b.name) ? 1 : -1)[0].unitId\n                : undefined;\n            \n            handleFieldChange(_fields => ({ ..._fields, unitId: preselectedUnitId }));\n            handleFieldChange(_fields => ({ ..._fields, unit: `${preselectedCategory}/${preselectedVariant}` }));\n            setCatalog(response.catalog);\n            console.log(response);\n          } else {\n            console.log(response);\n          }\n        })\n        .catch(console.log)\n    }\n  }, [userEmail, fields.from, fields.to]);\n\n  /* executes after:\n     - the catalog has been updated\n     - a discount coupon has been applied\n     - the payment frequency preference has changed\n     - a different unit variant has been selected\n  */\n  useEffect(() => {\n    if (!!catalog) {\n      const [category, variant] = (!fields.unit/* || !fields.unitCategory || !fields.unitVariant*/)\n        ? [Object.keys(catalog)[0], Object.keys(catalog[Object.keys(catalog)[0]]).find(_variant => !!catalog[Object.keys(catalog)[0]][_variant].available.units.length)]\n        : fields.unit.split('/');\n      const heldUnitExistsForUser = catalog[category][variant].available.units.some(_unit => !!_unit.held && _unit.held.for === userEmail);\n      const preselectedUnitId = heldUnitExistsForUser\n        ? catalog[category][variant].available.units.find(_unit => !!_unit.held && _unit.held.for === userEmail).unitId\n        : !!catalog[category][variant].available.units.length\n          ? catalog[category][variant].available.units.sort((a, b) => (a.name > b.name) ? 1 : -1)[0].unitId\n          : undefined;\n      handleFieldChange(_fields => ({ ..._fields, unitId: preselectedUnitId }));\n      setUnitVariant(catalog[category][variant]);\n      setPrice(priceCalculator(catalog[category][variant], fields.paymentFrequency, currency, coupon));\n    }\n  }, [userEmail, catalog, coupon, fields.paymentFrequency, fields.unit]);\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isVatNumberLookupRunning, setIsVatNumberLookupRunning] = useState(false);\n  const [touched, setTouched] = useState({});\n  const [focusedDate, setFocusedDate] = useState(false);\n  const [showVatInput, setShowVatInput] = useState(false);\n  const [validationErrors, setValidationErrors] = useState({});\n  const [validationSuccesses, setValidationSuccesses] = useState({});\n  const [vatEntity, setVatEntity] = useState({countryCode: 'BG', vatNumber: '', name: '', address: ''});\n  const useValidator = (customMessage = {}, customValidator = {}): [SimpleReactValidator/*, Function*/] => {\n    const validatorRef = useRef(new SimpleReactValidator({\n      messages: customMessage, \n      validators: customValidator,\n    }));\n    return [validatorRef];\n  };\n  const [validator] = useValidator();\n\n  useEffect(() => {\n    if (!!fields.coupon && fields.coupon.length > 9) {\n      API.post('limelockers', '/validation/coupon', { body: { coupon: fields.coupon } })\n        .then(response => {\n          //console.log(response);\n          if (!!response.error && (response.error.code === 'resource_missing')) {\n            setCoupon(c => ({ ...c, invalid: true, valid: false, message: `Unrecognised discount code: ${fields.coupon}` }));\n          } else if (!!response.coupon && response.coupon.valid) {\n            setCoupon(c => ({\n              ...c,\n              name: response.coupon.name,\n              discount: {\n                percent: response.coupon.percent_off || 0,\n                amount: response.coupon.amount_off || 0\n              },\n              invalid: false,\n              valid: true,\n              message: `Discount code applied: ${response.coupon.name}`\n            }));\n          }\n        })\n        .catch(console.log);\n    }\n  }, [fields.coupon]);\n\n  const blankPrice = {\n    id: undefined,\n    currency: 'bgn',\n    amount: {\n      base: 0,\n      subtotal: 0,\n      total: 0\n    },\n    discount: {\n      percent: 0,\n      amount: 0\n    },\n    vat: {\n      percent: 20,\n      amount: 0\n    }\n  };\n  const [price, setPrice] = useState(blankPrice);\n\n  function priceCalculator(unitVariant, paymentFrequency, currency, coupon) {\n    const base = unitVariant.product.price[paymentFrequency][currency].amount;\n    const discount = (!!coupon.discount.percent)\n      ? {\n          percent: coupon.discount.percent,\n          amount: (base * (coupon.discount.percent / 100))\n        }\n      : coupon.discount;\n    const subtotal = (base - discount.amount);\n    const vat = (!!unitVariant.product.price[paymentFrequency][currency].tax && !!unitVariant.product.price[paymentFrequency][currency].tax.VAT)\n      ? {\n          percent: unitVariant.product.price[paymentFrequency][currency].tax.VAT.percentage,\n          amount: (subtotal * (unitVariant.product.price[paymentFrequency][currency].tax.VAT.percentage / 100))\n        }\n      : {\n          percent: 0,\n          amount: 0\n        };\n    const total = (subtotal + vat.amount);\n    return {\n      id: unitVariant.product.price[paymentFrequency][currency].id,\n      currency: currency,\n      amount: {\n        base,\n        baseWithVat: (base + vat.amount), // only used to show what price would have been without discount\n        subtotal,\n        total\n      },\n      discount,\n      vat\n    };\n  }\n\n  useEffect(() => {\n    if (user && user.attributes) {\n      handleFieldChange(f => ({\n        ...f,\n        name: (user.attributes.name) ? user.attributes.name : f.name,\n        email: (user.attributes.email) ? user.attributes.email : f.email,\n        address: (user.attributes.address) ? user.attributes.address : f.address,\n        telephone: (user.attributes.phone_number) ? user.attributes.phone_number : f.telephone,\n        vat_number: ('custom:vat_number' in user.attributes) ? user.attributes['custom:vat_number'] : f.vat_number,\n      }));\n      if ('custom:vat_number' in user.attributes) {\n        // todo: rerun vat vies validation here.\n        setShowVatInput(true);\n        setVatEntity(e => ({\n          countryCode: user.attributes['custom:vat_number'].slice(0, 2),\n          vatNumber: user.attributes['custom:vat_number'].slice(2),\n          valid: true,\n          name: user.attributes.name,\n          address: user.attributes.address\n        }));\n      }\n    }\n  }, [user]);\n  useEffect(() => {\n    setTouched(t => ({\n      ...t,\n      vat_number: true,\n      name: true,\n      address: true\n    }));\n  }, [vatEntity]);\n\n  function validateForm() {\n    return (\n      (Object.keys(validationErrors).length === 0)\n      && (validator.current.allValid())\n      && (stripe && elements)\n      && fields.termsAccepted\n    );\n  }\n\n  function handleTabSelect(category) {\n    //console.log(`handleTabSelect(${category})`);\n    if (!fields.unit.startsWith(category)) {\n      handleCardSelect(category, Object.keys(catalog[category]).find(variant => !!catalog[category][variant].available.units.length));\n    }\n  }\n\n  function handleCardSelect(category, variant) {\n    //console.log(`handleCardSelect(${category}, ${variant})`);\n    if ((fields.unit !== `${category}/${variant}`) && (!!catalog[category][variant].available.units.length)) {\n      handleFieldChange(f => ({...f, unit: `${category}/${variant}`}));\n    }\n  }\n\n  async function handleVatNumberChange(event) {\n    //let tidiedVatNumber = (event.target.value || '').trim().replace(/ /g, '').toUpperCase();\n    const { id, value } = event.target;\n    const countryCode = (id === 'countryCode') ? value : vatEntity.countryCode;\n    const vatNumber = (id === 'vatNumber') ? value : vatEntity.vatNumber;\n    setVatEntity({ countryCode, vatNumber });\n    const vatNumberFormatValidators = {\n      AT: /^ATU[A-Z0-9]{9,9}$/,\n      BE: /^BE[0-9]{10,10}$/,\n      BG: /^BG[0-9]{9,10}$/,\n      CY: /^CY[A-Z0-9]{9,9}$/,\n      CZ: /^CZ[0-9]{8,10}$/,\n      DE: /^DE[0-9]{9,9}$/,\n      DK: /^DK[0-9]{8,8}$/,\n      EE: /^EE[0-9]{9,9}$/,\n      EL: /^EL[0-9]{9,9}$/,\n      ES: /^ES[A-Z0-9]{9,9}$/,\n      FI: /^FI[0-9]{8,8}$/,\n      FR: /^FR[A-Z0-9]{2,2}[0-9]{9,9}$/,\n      GB: /^GB[0-9]{9,9}$|^GB[0-9]{12,12}$|^GBGD[0-9]{3,3}$|^GBHA[0-9]{3,3}$/,\n      HU: /^HU[0-9]{8,8}$/,\n      IE: /^IE[A-Z0-9]{8,8}$/,\n      IT: /^IT[0-9]{11,11}$/,\n      LT: /^LT[0-9]{9,9}$|^LT[0-9]{12,12}$/,\n      LU: /^LU[0-9]{8,8}$/,\n      LV: /^LV[0-9]{11,11}$/,\n      MT: /^MT[0-9]{8,8}$/,\n      NL: /^NL[A-Z0-9]{12,12}$/,\n      PL: /^PL[0-9]{10,10}$/,\n      PT: /^PT[0-9]{9,9}$/,\n      SE: /^SE[0-9]{12,12}$/,\n      SI: /^SI[0-9]{8,8}$/,\n      SK: /^SK[0-9]{10,10}$/\n    };\n    if (`${countryCode}${vatNumber}`.match(vatNumberFormatValidators[countryCode])) {\n      setValidationSuccesses({\n        ...validationSuccesses,\n        vat_number: `${countryCode}${vatNumber} matches a known ${countryCode} VAT number format.`\n      });\n      if ('vat_number' in validationErrors) {\n        let {vat_number, ...validationErrorsWithVatNumberErrorsRemoved} = validationErrors;\n        setValidationErrors(validationErrorsWithVatNumberErrorsRemoved);\n      }\n      setIsVatNumberLookupRunning(true);\n      API.post('limelockers', '/validation/vat', { body: { countryCode, vatNumber } })\n        .then(response => {\n          setIsVatNumberLookupRunning(false);\n          if (response.status && response.entity && response.entity.valid) {\n            setValidationSuccesses({\n              ...validationSuccesses,\n              vat_number: `${countryCode}${vatNumber} is registered with VIES.`\n            });\n            if ('vat_number' in validationErrors) {\n              let {vat_number, ...validationErrorsWithVatNumberErrorsRemoved} = validationErrors;\n              setValidationErrors(validationErrorsWithVatNumberErrorsRemoved);\n            }\n            setVatEntity({\n              valid: response.entity.valid,\n              name: response.entity.name,\n              address: response.entity.address,\n              countryCode: response.entity.countryCode,\n              vatNumber: response.entity.vatNumber\n            });\n          } else if (response.entity && !response.entity.valid) {\n            setValidationErrors({\n              ...validationErrors,\n              vat_number: `${countryCode}${vatNumber} is not registered with VIES.`\n            });\n            if ('vat_number' in validationSuccesses) {\n              let {vat_number, ...validationSuccessesWithVatNumberSuccessesRemoved} = validationSuccesses;\n              setValidationSuccesses(validationSuccessesWithVatNumberSuccessesRemoved);\n            }\n          }\n          else {\n            console.log((response.error) ? response.error : response);\n          }\n        })\n        .catch(console.log);\n    } else {\n      setValidationErrors({\n        ...validationErrors,\n        vat_number: `${countryCode}${vatNumber} does not match a known ${countryCode} VAT number format.`\n      });\n      if ('vat_number' in validationSuccesses) {\n        let {vat_number, ...validationSuccessesWithVatNumberSuccessesRemoved} = validationSuccesses;\n        setValidationSuccesses(validationSuccessesWithVatNumberSuccessesRemoved);\n      }\n    }\n  }\n\n  function createSubscription({ cancelAt, customerId, paymentMethodId, reservation, defaultTaxRates, coupon }) {\n    const { priceId, unitCategoryId, unitVariantId, unitId, from, to } = reservation;\n    const items = [\n      {\n        priceId,\n        unitCategoryId,\n        unitVariantId,\n        unitId\n      }\n    ];\n    return (\n      API.put('limelockers', `/${providerId}/${facilityId}/subscription`, { body: { email: userEmail, cancelAt, customerId, items, paymentMethodId, reservation: { from, to }, defaultTaxRates, coupon } })\n        // If the card is declined, display an error to the user.\n        .then((response) => {\n          if (!response.status && response.error) {\n            throw response.error; // error associating payment method with customer\n          }\n          console.log(`[API.put (/${providerId}/${facilityId}/subscription) response]`, response);\n          return response;\n        })\n        .then((response) => {\n          return {\n            paymentMethodId,\n            reservation,\n            defaultTaxRates,\n            subscription: response.subscription\n          };\n        })\n        // Some payment methods require a customer to be on session\n        // to complete the payment process. Check the status of the\n        // payment intent to handle these actions.\n        .then(handlePaymentThatRequiresCustomerAction)\n        // If attaching this card to a Customer object succeeds,\n        // but attempts to charge the customer fail, you\n        // get a requires_payment_method error.\n        .then(handleRequiresPaymentMethod)\n        // No more actions required. Provision your service for the user.\n        .then(onSubscriptionComplete)\n        .catch((error) => {\n          // An error has happened. Display the failure to the user here.\n          // We utilize the HTML element we created.\n\n          // todo: implement error ui\n          //showCardError(error);\n          console.error(`[API.put (/${providerId}/${facilityId}/subscription) error]`, error)\n        })\n    );\n  }\n\n  function handlePaymentThatRequiresCustomerAction({ subscription, invoice, reservation, defaultTaxRates, paymentMethodId, isRetry }) {\n    if (subscription && subscription.status === 'active') {\n      // subscription is active, no customer actions required.\n      return {\n        subscription,\n        reservation,\n        defaultTaxRates,\n        paymentMethodId\n      };\n    }\n\n    // if it's a first payment attempt, the payment intent is on the subscription latest invoice.\n    // if it's a retry, the payment intent will be on the invoice itself.\n    let paymentIntent = invoice\n      ? invoice.payment_intent\n      : subscription.latest_invoice.payment_intent;\n\n    if (\n      paymentIntent.status === 'requires_action' ||\n      (isRetry === true && paymentIntent.status === 'requires_payment_method')\n    ) {\n      return stripe\n        .confirmCardPayment(paymentIntent.client_secret, { payment_method: paymentMethodId })\n        .then((result) => {\n          if (result.error) {\n            // start code flow to handle updating the payment details.\n            // display error message in your UI.\n            // the card was declined (i.e. insufficient funds, card has expired, etc).\n            throw result;\n          } else {\n            if (result.paymentIntent.status === 'succeeded') {\n              // show a success message to customer.\n              // there's a risk of the customer closing the window before the callback. watch webhook endpoints to mitigate.\n              return {\n                subscription,\n                reservation,\n                defaultTaxRates,\n                paymentMethodId,\n                invoice\n              };\n            }\n          }\n        })\n        .catch((error) => {\n          \n          // todo: implement error ui\n          // displayError(error);\n          console.log(error);\n        });\n    } else {\n      // no customer action needed.\n      return {\n        subscription,\n        reservation,\n        defaultTaxRates,\n        paymentMethodId\n      };\n    }\n  }\n\n  function onSubscriptionComplete(result) {\n    // Payment was successful.\n    if (result.subscription.status === 'active') {\n      // Change your UI to show a success message to your customer.\n      // Call your backend to grant access to your service based on\n      // `result.subscription.items.data[0].price.product` the customer subscribed to.\n    }\n  }\n\n  function handleRequiresPaymentMethod({ subscription, paymentMethodId, reservation, defaultTaxRates }) {\n    if (subscription.status === 'active') {\n      // subscription is active, no customer actions required.\n      return { subscription, paymentMethodId, reservation, defaultTaxRates };\n    } else if (\n      subscription.latest_invoice.payment_intent.status ===\n      'requires_payment_method'\n    ) {\n      // Using localStorage to manage the state of the retry here,\n      // feel free to replace with what you prefer.\n      // Store the latest invoice ID and status.\n      localStorage.setItem('latestInvoiceId', subscription.latest_invoice.id);\n      localStorage.setItem(\n        'latestInvoicePaymentIntentStatus',\n        subscription.latest_invoice.payment_intent.status\n      );\n      throw new Error('The card transaction was declined.');\n    } else {\n      return { subscription, paymentMethodId, reservation, defaultTaxRates };\n    }\n  }\n\n  function retryInvoiceWithNewPaymentMethod({ customerId, invoiceId, paymentMethodId }) {\n    return (\n      API.post('limelockers', `/${providerId}/${facilityId}/invoice`, { body: { customerId, invoiceId, paymentMethodId } })\n        // If the card is declined, display an error to the user.\n        .then((result) => {\n          if (result.error) {\n            // The card had an error when trying to attach it to a customer.\n            throw result;\n          }\n          return result;\n        })\n        // Normalize the result to contain the object returned by Stripe.\n        // Add the additional details we need.\n        .then((result) => {\n          return {\n            // Use the Stripe 'object' property on the\n            // returned result to understand what object is returned.\n            invoice: result,\n            paymentMethodId: paymentMethodId,\n            isRetry: true,\n          };\n        })\n        // Some payment methods require a customer to be on session\n        // to complete the payment process. Check the status of the\n        // payment intent to handle these actions.\n        .then(handlePaymentThatRequiresCustomerAction)\n        // No more actions required. Provision your service for the user.\n        .then(onSubscriptionComplete)\n        .catch((error) => {\n          // An error has happened. Display the failure to the user here.\n          // We utilize the HTML element we created.\n\n          // todo: implement error ui\n          // displayError(error);\n          console.log(error);\n        })\n    );\n  }\n\n  function parseStripeAddress(countryCode, viesAddress) {\n    switch (countryCode) {\n      case 'BG':\n        return {\n          line1: viesAddress.match(/^(.*)\\sобл\\./i)[1],\n          city: viesAddress.match(/гр\\.(.*)\\s[0-9]+$/i)[1],\n          state: viesAddress.match(/обл\\.(.*),/i)[1],\n          postal_code: viesAddress.match(/\\s([0-9]*)$/i)[1],\n          country: countryCode\n        };\n      default:\n        return {\n          line1: viesAddress,\n          country: countryCode\n        };\n    }\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setIsSubmitting(true);\n\n    // associate name, address, telephone, vat number with cognito user\n    Auth.currentAuthenticatedUser().then(async(user) => {\n      let { attributes } = user;\n      if (!('custom:stripe_customer_id' in attributes)) {\n        // todo: check for an existing customer, using email address\n        const createCustomerResponse = await API.put('limelockers', `/${providerId}/${facilityId}/customer`, { body: { email: attributes.email } });\n        if (createCustomerResponse.status && createCustomerResponse.customer && createCustomerResponse.customer.id) {\n          await Auth.updateUserAttributes(user, { 'custom:stripe_customer_id': createCustomerResponse.customer.id });\n          user.attributes['custom:stripe_customer_id'] = createCustomerResponse.customer.id;\n        } else if (createCustomerResponse.error) {\n          console.log(createCustomerResponse.error);\n        }\n      }\n      Auth.updateUserAttributes(user,\n        {\n          name: (vatEntity.name || fields.name),\n          phone_number: fields.telephone,\n          address: (vatEntity.address || fields.address),\n          ...(vatEntity.valid && !!vatEntity.vatNumber) && { 'custom:vat_number': `${vatEntity.countryCode}${vatEntity.vatNumber}` }\n        })\n        .then(response => console.log('[Auth.updateUserAttributes response]', response))\n        .catch(error => console.error('[Auth.updateUserAttributes error]', error));\n      /*\n      todo:\n      - generate invoice\n      - create stripe subscription\n      - trigger stripe payment method collection\n      - confirm booking\n        - show confirmation\n        - send email confirmation\n      */\n\n      // associate name, address, telephone, vat number with stripe customer\n      API.post('limelockers', `/${providerId}/${facilityId}/customer`,\n        {\n          body: {\n            customerId: user.attributes['custom:stripe_customer_id'],\n            ...((vatEntity.valid && vatEntity.name) || fields.name) && { name: (vatEntity.valid && !!vatEntity.name) ? vatEntity.name : fields.name },\n            ...((vatEntity.valid && vatEntity.address) || fields.address) && { address: (vatEntity.valid && !!vatEntity.address) ? parseStripeAddress(vatEntity.countryCode, vatEntity.address) : { line1: fields.address } },\n            ...(fields.telephone) && { phone: fields.telephone },\n            ...(vatEntity.valid && !!vatEntity.vatNumber) && { taxId: { type: 'eu_vat', value: `${vatEntity.countryCode}${vatEntity.vatNumber}` } }\n          }\n        })\n        .then(response => {\n          console.log(`[API.post (/${providerId}/${facilityId}/customer) response]`, response);\n          if (!response.status || !!response.error) {\n            console.log(`[user]`, user);\n          }\n        })\n        .catch(error => console.log(`[API.post (/${providerId}/${facilityId}/customer) error]`, error));\n\n      // begin stripe subscription specific processing\n      if (!stripe || !elements) {\n        return;\n      }\n      const cardElement = elements.getElement(CardElement);\n      const latestInvoicePaymentIntentStatus = localStorage.getItem(\n        'latestInvoicePaymentIntentStatus'\n      );\n      const { error, paymentMethod } = await stripe.createPaymentMethod({\n        type: 'card',\n        card: cardElement,\n      });\n      if (error) {\n        console.log('[stripe.createPaymentMethod error]', error);\n        switch (error.type) {\n          case 'validation_error':\n            if ('card' in validationSuccesses) {\n              let {card, ...validationSuccessesWithCardSuccessesRemoved} = validationSuccesses;\n              setValidationSuccesses(validationSuccessesWithCardSuccessesRemoved);\n            }\n            setValidationErrors({\n              ...validationErrors,\n              card: error.message\n            });\n            setIsSubmitting(false);\n            break;\n          default:\n            break;\n        }\n      } else {\n        console.log('[stripe.PaymentMethod created]', paymentMethod);\n\n        setValidationSuccesses({ ...validationSuccesses, card: true });\n        if ('card' in validationErrors) {\n          let {card, ...validationErrorsWithCardErrorsRemoved} = validationErrors;\n          setValidationErrors(validationErrorsWithCardErrorsRemoved);\n        }\n\n        const paymentMethodId = paymentMethod.id;\n        const customerId = user.attributes['custom:stripe_customer_id'];\n        const defaultTaxRates = [unitVariant.product.price[fields.paymentFrequency][currency].tax.VAT.id];\n        const cancelAt = moment(fields.to).format('X');\n        const couponCode = (coupon.valid && !!fields.coupon) ? fields.coupon : undefined;\n        const unit = unitVariant.available.units.find(_unit => _unit.unitId === fields.unitId);\n        const reservation = {\n          priceId: unitVariant.product.price[fields.paymentFrequency][currency].id,\n          unitCategoryId: unit.unitCategoryId,\n          unitVariantId: unit.unitVariantId,\n          unitId: unit.unitId,\n          from: moment(fields.from).format(),\n          to: moment(fields.to).format()\n        };\n        if (latestInvoicePaymentIntentStatus === 'requires_payment_method') {\n          // Update the payment method and retry invoice payment\n          const invoiceId = localStorage.getItem('latestInvoiceId');\n          retryInvoiceWithNewPaymentMethod({ customerId, invoiceId, paymentMethodId });\n        } else {\n          // Create the subscription\n          createSubscription({ cancelAt, customerId, paymentMethodId, reservation, defaultTaxRates, coupon: couponCode })\n            .then(response => {\n              setIsSubmitting(false);\n              setRedirect('/bookings');\n            })\n            .catch(error => console.log('[createSubscription error]', error));\n        }\n      }\n      // end stripe subscription specific processing\n\n    })\n    .catch(error => console.log('[Auth.currentAuthenticatedUser error]', error));\n  }\n\n  return (!!redirect)\n    ?  <Redirect to={redirect} />\n    : isLoading\n      ? (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" size=\"lg\" style={{marginTop: '250px', marginBottom: '250px'}} />\n          </div>\n        )\n      : (\n          (!!unitVariant)\n            ? (\n                <>\n                  <Container id=\"book-form\">\n                    <Form onSubmit={handleSubmit} className=\"clearfix\" noValidate>\n                      <Row>\n                        <Col>\n                          <Form.Group>\n                            <Form.Check\n                              type=\"checkbox\"\n                              label=\"Do you require a VAT invoice?\"\n                              checked={showVatInput}\n                              onChange={() => {setShowVatInput(!showVatInput)}} />\n                          </Form.Group>\n                          {\n                            showVatInput\n                              ? (\n                                  <>\n                                    <Form.Label>VAT Number:</Form.Label>\n                                    <Form.Group className=\"form-inline\">\n                                      <Form.Control\n                                        style={{ marginRight: '10px' }}\n                                        id=\"countryCode\"\n                                        as=\"select\"\n                                        value={vatEntity.countryCode}\n                                        onChange={handleVatNumberChange}>\n                                        {\n                                          ['AT', 'BE', 'BG', 'CY', 'CZ', 'DE', 'DK', 'EE', 'EL',  'ES', 'FI', 'FR', 'GB', 'HU', 'IE', 'IT', 'LT', 'LU', 'LV', 'MT', 'NL', 'PL', 'PT', 'SE', 'SI', 'SK'].map(countryCode => (\n                                            <option key={countryCode}>\n                                              {countryCode}\n                                            </option>\n                                          ))\n                                        }\n                                      </Form.Control>\n                                      <Form.Control\n                                        style={{ marginRight: '10px' }}\n                                        id=\"vatNumber\"\n                                        type=\"text\"\n                                        placeholder=\"9999999\"\n                                        value={vatEntity.vatNumber}\n                                        onChange={handleVatNumberChange}\n                                        isValid={vatEntity.valid || !showVatInput}\n                                        isInvalid={((!isVatNumberLookupRunning) && ('vat_number' in validationErrors))} />\n                                      {\n                                        isVatNumberLookupRunning\n                                        ? <Spinner style={{ marginLeft: '10px' }} animation=\"border\" size=\"sm\" />\n                                        : null\n                                      }\n                                      <Form.Text className=\"text-muted\">\n                                        VAT numbers are validated with the <a href=\"https://ec.europa.eu/taxation_customs/vies\">European Commission VIES VAT number validator</a>. On verification, your invoice will be addressed to the company name and address registered with VIES.\n                                      </Form.Text>\n                                      <Form.Text style={{color: 'rgb(123, 179, 44)'}}>\n                                        {validationSuccesses.vat_number}\n                                      </Form.Text>\n                                      <Form.Text className=\"text-danger\">\n                                        {validationErrors.vat_number}\n                                      </Form.Text>\n                                    </Form.Group>\n                                  </>\n                                )\n                              : null\n                          }\n                          <Form.Group controlId=\"name\">\n                            <Form.Label>Name:</Form.Label>\n                            <Form.Control\n                              type=\"text\"\n                              placeholder=\"individual or company name\"\n                              value={(vatEntity.name || fields.name)}\n                              isValid={validator.current.fieldValid('name')}\n                              isInvalid={(('name' in touched) && (!validator.current.fieldValid('name')))}\n                              onChange={e => { const {id, value} = e.target; handleFieldChange(f => ({...f, [id]: value})); setTouched({...touched, name: true}); validator.current.showMessageFor('name'); }}\n                              disabled={((vatEntity.name !== '') && (vatEntity.valid))}\n                            />\n                            <Form.Text className=\"text-muted\">\n                              This name will appear on your invoice. Use your own name or if your company will claim a VAT rebate, check the VAT invoice box above and we'll use the company name associated with your EU registered, VAT number.\n                            </Form.Text>\n                            <Form.Text>\n                              {\n                                ('name' in touched)\n                                  ? validator.current.message(\n                                      'name',\n                                      (vatEntity.name || fields.name),\n                                      'required',\n                                      {\n                                        className: 'text-danger',\n                                        messages: {\n                                          required: 'Please enter a name.'\n                                        }\n                                      }\n                                    )\n                                  : null\n                              }\n                            </Form.Text>\n                          </Form.Group>\n                          <Form.Group controlId=\"telephone\">\n                            <Form.Label>Telephone:</Form.Label>\n                            <Form.Control\n                              type=\"phone\"\n                              placeholder=\"+359 555 123 456\"\n                              value={fields.telephone}\n                              isValid={validator.current.fieldValid('telephone')}\n                              isInvalid={(('telephone' in touched) && (!validator.current.fieldValid('telephone')))}\n                              onChange={e => { const {id, value} = e.target; handleFieldChange(f => ({...f, [id]: value})); setTouched({...touched, telephone: true}); validator.current.showMessageFor('telephone'); }}\n                            />\n                            <Form.Text className=\"text-muted\">\n                              This number will receive communications about your self-storage and related billing only.\n                            </Form.Text>\n                            <Form.Text>\n                              {\n                                ('telephone' in touched)\n                                  ? validator.current.message(\n                                      'telephone',\n                                      fields.telephone,\n                                      'required|phone',\n                                      {\n                                        className: 'text-danger',\n                                        messages: {\n                                          required: 'Please enter a telephone number.'\n                                        }\n                                      }\n                                    )\n                                  : null\n                              }\n                            </Form.Text>\n                          </Form.Group>\n                          <Form.Group controlId=\"address\">\n                            <Form.Label>Address</Form.Label>\n                            <Form.Control\n                              as=\"textarea\"\n                              rows={3}\n                              value={(vatEntity.address || fields.address)}\n                              isValid={((vatEntity.valid || !showVatInput) && !!fields.address)}\n                              onChange={e => { const {id, value} = e.target; handleFieldChange(f => ({...f, [id]: value})); }}\n                              disabled={((vatEntity.address !== '') && (vatEntity.valid))}\n                            />\n                            <Form.Text className=\"text-muted\">\n                              This address will appear on invoices only. We do not send postal mail of any kind.\n                            </Form.Text>\n                          </Form.Group>\n                        </Col>\n                        <Col>\n                          <Form.Group>\n                            <Form.Label>What type of locker or parking space do you require?</Form.Label>\n                            <ul>\n                              {\n                                Object.keys(catalog).map(category => (\n                                  <li\n                                    key={category}\n                                    className={(fields.unit.startsWith(category)) ? '' : 'text-muted'}>\n                                    <span>{category}:</span>\n                                    {\n                                      Object.keys(catalog[category]).map(variant => (\n                                        <Form.Check key={variant}>\n                                          <Form.Check.Input\n                                            style={{cursor: 'pointer'}}\n                                            type=\"radio\"\n                                            disabled={(catalog[category][variant].available.units.length === 0)}\n                                            checked={fields.unit === `${category}/${variant}`}\n                                            onChange={() => {handleCardSelect(category, variant);}} />\n                                          <Form.Check.Label\n                                            style={{ cursor: (catalog[category][variant].available.units.length === 0) ? 'not-allowed' : 'pointer' }}\n                                            className={(fields.unit === `${category}/${variant}`) ? 'active' : 'text-muted'}\n                                            onClick={() => {handleCardSelect(category, variant);}}>\n                                            {`${variant}${(catalog[category][variant].available.units.length === 0) ? ' - not available' : ''}`}\n                                          </Form.Check.Label>\n                                        </Form.Check>\n                                      ))\n                                    }\n                                  </li>\n                                ))\n                              }\n                            </ul>\n                            {\n                              (!!unitVariant.dimensions && !!unitVariant.dimensions.locker)\n                                ? (\n                                    <Form.Text className=\"text-muted\">\n                                      {`width: ${unitVariant.dimensions.locker.width / 100}m`}\n                                      &nbsp;\n                                      &times;\n                                      &nbsp;\n                                      {`depth: ${unitVariant.dimensions.locker.depth / 100}m`}\n                                      &nbsp;\n                                      &times;\n                                      &nbsp;\n                                      {`height: ${unitVariant.dimensions.locker.height / 100}m`}\n                                    </Form.Text>\n                                  )\n                                : null\n                            }\n                          </Form.Group>\n                          <Form.Group>\n                            <Form.Label>\n                              Choose your { fields.unit.includes('enclosed lockers') ? 'locker' : fields.unit.includes('bicycle') ? 'bike rack space' : 'motorcycle parking bay' }:\n                            </Form.Label>\n                            <br />\n                            {\n                              unitVariant.available.units\n                                // hide units held for others\n                                .filter(u => (!u.held || u.held.for === user.attributes.email))\n                                // sort units\n                                .sort(\n                                  (a, b) => \n                                    (!!a.held || !!b.held)\n                                      // show units held for user first\n                                      ? (!!a.held && !!b.held) ? 0 : (!!a.held) ? -1 : 1\n                                      // otherwise sort by name\n                                      : (a.name === b.name) ? 0 : (a.name > b.name) ? 1 : -1\n                                )\n                                // show only the first 5 available units\n                                .slice(0, 5)\n                                .map(unit => (\n                                  <Form.Check\n                                    inline\n                                    key={unit.unitId}>\n                                    <Form.Check.Input\n                                      style={{cursor: 'pointer'}}\n                                      type=\"radio\"\n                                      checked={fields.unitId === unit.unitId}\n                                      onChange={() => { handleFieldChange(f => ({...f, unitId: unit.unitId})); }} />\n                                    <Form.Check.Label\n                                      style={{ cursor: 'pointer' }}\n                                      className={(fields.unitId === unit.unitId) ? 'active' : 'text-muted'}\n                                      onClick={() => { handleFieldChange(f => ({...f, unitId: unit.unitId})); }}>\n                                      {`${unit.name}${(!!unit.held && unit.held.for === user.attributes.email) ? ' - reserved for you' : ''}`}\n                                    </Form.Check.Label>\n                                  </Form.Check>\n                                ))\n                            }\n                            <Form.Text className=\"text-muted\">\n                              {(!!fields.unitId) ? unitVariant.available.units.find(unit => unit.unitId === fields.unitId).description : null}\n                            </Form.Text>\n                          </Form.Group>\n                          <Form.Group>\n                            <Row>\n                              <Col>\n                                <Form.Label>Start Date:</Form.Label>\n                                <br />\n                                <SingleDatePicker\n                                  displayFormat=\"MMM DD YYYY\"\n                                  date={moment(fields.from)}\n                                  onDateChange={e => { handleFieldChange(f => ({ ...f, from: e.toISOString(), to: e.add(fields.months, 'M').toISOString() }));}}\n                                  focused={focusedDate}\n                                  onFocusChange={({ focused }) => setFocusedDate(focused)}\n                                  id=\"from\"\n                                />\n                              </Col>\n                              <Col>\n                                <Form.Label>{(fields.paymentFrequency === 'year') ? 'Years' : 'Months'} Required:</Form.Label>\n                                <br />\n                                <Form.Control\n                                  id=\"months\"\n                                  type=\"number\"\n                                  min={1}\n                                  max={(fields.paymentFrequency === 'year') ? Math.floor(maxTenancyInMonths/12) : maxTenancyInMonths}\n                                  value={(fields.paymentFrequency === 'year') ? Math.floor(fields.months/12) : fields.months}\n                                  onChange={\n                                    e => {\n                                      const months = (fields.paymentFrequency === 'year') ? (Math.max(Math.min(parseInt(e.target.value), Math.floor(maxTenancyInMonths / 12)), 1) * 12) : Math.max(Math.min(parseInt(e.target.value), maxTenancyInMonths), 1);\n                                      handleFieldChange(\n                                        f => (\n                                          {\n                                            ...f,\n                                            months,\n                                            to: moment(fields.from).add(months, 'M').toISOString()\n                                          }\n                                        )\n                                      );\n                                    }\n                                  }\n                                />\n                              </Col>\n                              <Col>\n                                <Form.Label>\n                                  End Date:\n                                </Form.Label>\n                                <br />\n                                {Intl.DateTimeFormat(undefined, { year: 'numeric', month: 'short', day: 'numeric' }).format(new Date(fields.to))}\n                                {\n                                  (fields.paymentFrequency === 'year')\n                                    ? (\n                                        <Form.Text className=\"active\">\n                                          {`${Math.floor(fields.months / 12)} month${(Math.floor(fields.months / 12) > 1) ? 's' : ''} free!`}\n                                        </Form.Text>\n                                      )\n                                    : null\n                                }\n                              </Col>\n                            </Row>\n                            <Form.Text className=\"text-muted\">\n                              Self-storage may be reserved for between 1 and {maxTenancyInMonths} months ({(Math.floor(maxTenancyInMonths / 12) * 13)} months for annual payment customers). Subject to availability, you may amend your booking to change to an earlier or later end date at any time.\n                            </Form.Text>\n                          </Form.Group>\n                          <Form.Group controlId=\"coupon\">\n                            <Form.Label>discount code:</Form.Label>\n                            <Form.Control\n                              type=\"text\"\n                              value={fields.coupon}\n                              isValid={!!coupon.valid}\n                              isInvalid={!!coupon.invalid}\n                              disabled={!!coupon.valid}\n                              onChange={\n                                e => {\n                                  const {id, value} = e.target;\n                                  handleFieldChange(f => ({...f, [id]: value}));\n                                }\n                              }\n                            />\n                            <Form.Text className={(!!coupon.message) ? ((!!coupon.invalid) ? 'text-danger' : 'text-success') : 'text-muted'}>\n                              {\n                                (!!coupon.message)\n                                  ? coupon.message\n                                  : 'If you have a discount code, enter it here.'\n                              }\n                            </Form.Text>\n                          </Form.Group>\n                          <Form.Group>\n                            <Form.Check>\n                              <Form.Check.Input\n                                style={{cursor: 'pointer'}}\n                                type=\"radio\"\n                                disabled={false}\n                                checked={fields.paymentFrequency !== 'year'}\n                                onChange={e => { handleFieldChange(f => ({ ...f, paymentFrequency: 'month' })); }} />\n                              <Form.Check.Label\n                                style={{ cursor: (unitVariant.available.units.length === 0) ? 'not-allowed' : 'pointer' }}\n                                className={(fields.paymentFrequency !== 'year') ? 'active' : 'text-muted'}\n                                onClick={e => { handleFieldChange(f => ({ ...f, paymentFrequency: 'month' })); }}>\n                                monthly payment: <span>\n                                {\n                                  (coupon.valid)\n                                    ? (\n                                        <>\n                                          <span className=\"text-muted\" style={{textDecoration: 'line-through', color: '#000000'}}>\n                                            лв{Number.parseFloat((priceCalculator(unitVariant, 'month', currency, coupon)).amount.baseWithVat).toFixed(2)}\n                                          </span>\n                                          &nbsp;\n                                          <span>\n                                            лв{Number.parseFloat((priceCalculator(unitVariant, 'month', currency, coupon)).amount.total).toFixed(2)}\n                                          </span>\n                                        </>\n                                      )\n                                    : (\n                                        <span>\n                                          лв{Number.parseFloat((priceCalculator(unitVariant, 'month', currency, coupon)).amount.total).toFixed(2)}\n                                        </span>\n                                      )\n                                } bgn</span> per month\n                              </Form.Check.Label>\n                            </Form.Check>\n                            <Form.Check>\n                              <Form.Check.Input\n                                style={{cursor: 'pointer'}}\n                                type=\"radio\"\n                                disabled={false}\n                                checked={fields.paymentFrequency === 'year'}\n                                onChange={e => { handleFieldChange(f => ({ ...f, paymentFrequency: 'year' })); }} />\n                              <Form.Check.Label\n                                style={{ cursor: (unitVariant.available.units.length === 0) ? 'not-allowed' : 'pointer' }}\n                                className={(fields.paymentFrequency === 'year') ? 'active' : 'text-muted'}\n                                onClick={e => { handleFieldChange(f => ({ ...f, paymentFrequency: 'year' })); }}>\n                                annual payment: <span>\n                                {\n                                  (coupon.valid)\n                                    ? (\n                                        <>\n                                          <span className=\"text-muted\" style={{textDecoration: 'line-through', color: '#000000'}}>\n                                            лв{Number.parseFloat((priceCalculator(unitVariant, 'year', currency, coupon)).amount.baseWithVat).toFixed(2)}\n                                          </span>\n                                          &nbsp;\n                                          <span>\n                                            лв{Number.parseFloat((priceCalculator(unitVariant, 'year', currency, coupon)).amount.total).toFixed(2)}\n                                          </span>\n                                        </>\n                                      )\n                                    : (\n                                        <span>\n                                          лв{Number.parseFloat((priceCalculator(unitVariant, 'year', currency, coupon)).amount.total).toFixed(2)}\n                                        </span>\n                                      )\n                                } bgn</span> per year\n                              </Form.Check.Label>\n                            </Form.Check>\n                            <Form.Text className=\"text-muted\">\n                              Customers choosing the annual payment option will receive 12 months for the price of 11.\n                              <br />\n                              - A saving of <span>лв{Number.parseFloat((priceCalculator(unitVariant, 'month', currency, coupon)).amount.total).toFixed(2)} bgn</span> per year.\n                            </Form.Text>\n                          </Form.Group>\n                          <hr />\n                          <Table size=\"sm\">\n                            <thead>\n                              <tr>\n                                <th className=\"text-muted\">\n                                  description\n                                </th>\n                                <th className=\"text-muted text-right\">\n                                  qty\n                                </th>\n                                <th className=\"text-muted text-right\">\n                                  unit price\n                                </th>\n                                <th className=\"text-muted text-right\">\n                                  amount\n                                </th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              <tr>\n                                <td colSpan=\"4\" className=\"text-muted\">\n                                  {moment(fields.from).format('MMM D, YYYY')}\n                                  &nbsp;-&nbsp;\n                                  {moment(fields.from).add(1, (fields.paymentFrequency === 'year') ? 'Y' : 'M').format('MMM D, YYYY')}\n                                </td>\n                              </tr>\n                              <tr>\n                                <td>\n                                  {fields.unit}\n                                </td>\n                                <td className=\"text-right\">\n                                  1\n                                </td>\n                                <td className=\"text-right text-muted\">\n                                  {currencySymbol[currency]}\n                                  {\n                                    (fields.paymentFrequency === 'year')\n                                      ? Number.parseFloat(price.amount.base / 11 * 12).toFixed(2)\n                                      : Number.parseFloat(price.amount.base).toFixed(2)\n                                  }\n                                </td>\n                                <td className=\"text-right\">\n                                  {currencySymbol[currency]}\n                                  {\n                                    (fields.paymentFrequency === 'year')\n                                      ? Number.parseFloat(price.amount.base / 11 * 12).toFixed(2)\n                                      : Number.parseFloat(price.amount.base).toFixed(2)\n                                  }\n                                </td>\n                              </tr>\n                              {\n                                (fields.paymentFrequency === 'year')\n                                  ? (\n                                      <tr className=\"active\">\n                                        <td colSpan=\"3\" className=\"text-right\">\n                                          discount: <em>annual payment</em> (1 month free)\n                                        </td>\n                                        <td className=\"text-right\">\n                                          - {currencySymbol[currency]}\n                                          {Number.parseFloat(price.amount.base / 11).toFixed(2)}\n                                        </td>\n                                      </tr>\n                                    )\n                                  : null\n                              }\n                              {\n                                (price.discount.amount)\n                                  ? (\n                                      <tr className=\"active\">\n                                        <td colSpan=\"3\" className=\"text-right\">\n                                          discount: <em>{coupon.name}</em> ({price.discount.percent}%)\n                                        </td>\n                                        <td className=\"text-right\">\n                                          -{currencySymbol[currency]}\n                                          {Number.parseFloat(price.discount.amount).toFixed(2)}\n                                        </td>\n                                      </tr>\n                                    )\n                                  : null\n                              }\n                              <tr>\n                                <td colSpan=\"3\" className=\"text-right\">\n                                  subtotal\n                                </td>\n                                <td className=\"text-right\">\n                                  {currencySymbol[currency]}\n                                  {Number.parseFloat(price.amount.subtotal).toFixed(2)}\n                                </td>\n                              </tr>\n                              {\n                                (price.vat.amount)\n                                  ? (\n                                      <tr>\n                                        <td colSpan=\"3\" className=\"text-muted text-right\">\n                                          VAT - Bulgaria ({price.vat.percent}%)\n                                        </td>\n                                        <td className=\"text-right\">\n                                          {currencySymbol[currency]}\n                                          {Number.parseFloat(price.vat.amount).toFixed(2)}\n                                        </td>\n                                      </tr>\n                                    )\n                                  : null\n                              }\n                              <tr>\n                                <td colSpan=\"3\" className=\"text-right\">\n                                  <strong>\n                                    {\n                                      ((fields.months/((fields.paymentFrequency === 'year') ? 12 : 1)) > 1)\n                                        ? (fields.paymentFrequency === 'year') ? 'yearly' : 'monthly'\n                                        : null\n                                    } total {\n                                      ((fields.months/((fields.paymentFrequency === 'year') ? 12 : 1)) > 1)\n                                        ? (\n                                            <span className=\"text-muted\">\n                                              ({(fields.months/((fields.paymentFrequency === 'year') ? 12 : 1))} payments)\n                                            </span>\n                                          )\n                                        : null\n                                    }\n                                  </strong>\n                                </td>\n                                <td className=\"text-right\">\n                                  <strong>\n                                    {currencySymbol[currency]}\n                                    {Number.parseFloat(price.amount.total).toFixed(2)}\n                                  </strong>\n                                </td>\n                              </tr>\n                            </tbody>\n                          </Table>\n                          <hr />\n                          <Form.Group>\n                            <Form.Label>Payment Card:</Form.Label>\n                            <CardElement\n                              id=\"stripe-payment-method\"\n                              onChange={() => {\n                                if ('card' in validationErrors) {\n                                  let {card, ...validationErrorsWithCardErrorsRemoved} = validationErrors;\n                                  setValidationErrors(validationErrorsWithCardErrorsRemoved);\n                                }\n                              }}\n                              options={{\n                                style: {\n                                  base: {\n                                    color: 'rgb(48, 11, 11)',\n                                    fontFamily: 'Roboto, sans-serif',\n                                    fontSmoothing: 'antialiased',\n                                    fontSize: \"16px\",\n                                    '::placeholder': {\n                                      color: '#aab7c4',\n                                    },\n                                    iconColor: '#ff3399',\n                                  },\n                                  invalid: {\n                                    color: \"#fa755a\",\n                                    iconColor: \"#fa755a\",\n                                  },\n                                },\n                              }} />\n                            <Form.Text className=\"text-danger\">\n                              {validationErrors.card}\n                            </Form.Text>\n                            <Form.Text className=\"text-muted\">\n                              You have requested use of self-storage space for a period of {(fields.months/((fields.paymentFrequency === 'year') ? 12 : 1))} {(fields.paymentFrequency === 'year') ? 'years' : 'months'}.<br />\n                              {\n                                ((fields.months/((fields.paymentFrequency === 'year') ? 12 : 1)) > 1)\n                                  ? (\n                                      <span>Subscription payments will be debited from your chosen payment method today and will repeat each {(fields.paymentFrequency === 'year') ? 'year' : 'month'}.</span>\n                                    )\n                                  : (\n                                      <span>One payment will be debited from your chosen payment method, when you submit this form.</span>\n                                    )\n                              }\n                            </Form.Text>\n                          </Form.Group>\n                          <Form.Group>\n                            <Form.Check\n                              type=\"checkbox\"\n                              label={(\n                                <span>I have read and accepted the <a href=\"/terms\" target=\"_blank\">terms and conditions</a>.</span>\n                                )}\n                              checked={fields.termsAccepted}\n                              onChange={() => {handleFieldChange(f => ({...f, termsAccepted: !f.termsAccepted}))}} />\n                          </Form.Group>\n                        </Col>\n                      </Row>\n                      <LoaderButton\n                        type=\"submit\"\n                        className=\"float-right\"\n                        isLoading={isSubmitting}\n                        disabled={!validateForm()}>\n                        reserve and pay\n                      </LoaderButton>\n                    </Form>\n                  </Container>\n                  <Container id=\"book-units\">\n                    <Tabs activeKey={fields.unit.split('/')[0]} onSelect={(category) => handleTabSelect(category)}>\n                      {\n                        Object.keys(catalog).map(category => (\n                          <Tab key={category} eventKey={category} title={category}>\n                            <CardDeck>\n                            {\n                              Object.keys(catalog[category]).map(variant => (\n                                <Card\n                                  key={variant}\n                                  className={(fields.unit === `${category}/${variant}`) ? 'active' : 'text-muted'}\n                                  onClick={() => handleCardSelect(category,  variant)}>\n                                  <Card.Header\n                                    style={{cursor: 'pointer'}}\n                                    as=\"div\">\n                                    <span className={`float-right availability-${(catalog[category][variant].available.units.length < 1) ? 'zero' : (catalog[category][variant].available.units.length < 3) ? 'low' : 'high'}`}>\n                                      available: <strong>{catalog[category][variant].available.units.length}</strong>\n                                    </span>\n                                  </Card.Header>\n                                  <Card.Img\n                                    variant=\"top\"\n                                    src={catalog[category][variant].image.url}\n                                    className=\"mx-auto\"\n                                    style={{cursor: 'pointer', width: '100%', opacity: (fields.unit === `${category}/${variant}`) ? 1 : 0.2}} />\n                                  <Card.Body>\n                                    <Card.Title>\n                                      {variant}\n                                    </Card.Title>\n                                    <Card.Text>\n                                      {catalog[category][variant].description}\n                                    </Card.Text>\n                                    <Card.Text as=\"div\">\n                                      <strong>unit price:</strong>\n                                      <ul>\n                                        <li className=\"price active\">\n                                          <span>лв{Number.parseFloat(priceCalculator(catalog[category][variant], 'year', currency, coupon).amount.total).toFixed(2)} bgn</span> yearly\n                                        </li>\n                                        <li className=\"price active\">\n                                          <span>лв{Number.parseFloat(priceCalculator(catalog[category][variant], 'month', currency, coupon).amount.total).toFixed(2)} bgn</span> monthly\n                                        </li>\n                                      </ul>\n                                    </Card.Text>\n                                    {\n                                      catalog[category][variant].dimensions &&\n                                      <Card.Text as=\"div\">\n                                        <strong>locker size</strong>\n                                        <ul>\n                                          {\n                                            Object.keys(catalog[category][variant].dimensions.locker).map(prop => (\n                                              <li key={prop}>{prop}: {catalog[category][variant].dimensions.locker[prop] / 100} meter</li>\n                                            ))\n                                          }\n                                          <li>\n                                            area: {\n                                              ((catalog[category][variant].dimensions.locker.width / 100) * (catalog[category][variant].dimensions.locker.depth / 100)).toFixed(1)\n                                            } m<sup>2</sup>\n                                          </li>\n                                          <li>\n                                            volume: {\n                                              ((catalog[category][variant].dimensions.locker.width / 100) * (catalog[category][variant].dimensions.locker.height / 100) * (catalog[category][variant].dimensions.locker.depth / 100)).toFixed(1)\n                                            } m<sup>3</sup>\n                                          </li>\n                                        </ul>\n                                        <strong>door size</strong>\n                                        <ul>\n                                          {\n                                            Object.keys(catalog[category][variant].dimensions.door).map(prop => (\n                                              <li key={prop}>{prop}: {catalog[category][variant].dimensions.door[prop]/100} meter</li>\n                                            ))\n                                          }\n                                        </ul>\n                                      </Card.Text>\n                                    }\n                                  </Card.Body>\n                                </Card>\n                              ))\n                            }\n                            </CardDeck>\n                          </Tab>\n                        ))\n                      }\n                    </Tabs>\n                  </Container>\n                </>\n              )\n            : null\n        );\n}\n","export const locale = {\n  'en-bg': {\n    currency: {\n      symbol: 'лв',\n      code: 'bgn'\n    }\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\nimport moment from 'moment';\nimport { API } from 'aws-amplify';\nimport { locale } from '../contexts/locale';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Spinner from 'react-bootstrap/Spinner';\n\nconst providerId = 'e986bca0-ff41-11ea-8196-af25e422bd08';\nconst facilityId = 'ff1694c0-ffa8-11ea-bfbc-4f270cb046f3';\n\nexport default function BookingList() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [account, setAccount] = useState(undefined);\n  const [catalog, setCatalog] = useState(undefined);\n  const [reservations, setReservations] = useState([]);\n  const [activeReservation, setActiveReservation] = useState(`r0`);\n\n  useEffect(() => {\n    if (!account) {\n      API.get('limelockers', `/${providerId}/${facilityId}/account`)\n        .then(response => {\n          if (response.status && response.account) {\n            setAccount(response.account);\n            console.log(response.account);\n          } else {\n            setIsLoading(false);\n          }\n        })\n        .catch(console.error)\n    }\n    if (!catalog) {\n      API.get('limelockers', `/${providerId}/${facilityId}/catalog?from=${moment().add(72, 'M').toISOString()}&to=${moment().add(73, 'M').toISOString()}`)\n        .then(response => {\n          if (!!response.status && !!response.catalog) {\n            setCatalog(response.catalog);\n            console.log(response.catalog);\n          }\n        })\n        .catch(console.error);\n    }\n  });\n\n  useEffect(() => {\n    if (!!account && !!catalog) {\n      if (!!account.reservations && !!account.reservations.length) {\n        setReservations(account.reservations\n          .filter(_reservation => (!!_reservation.unitCategoryId && !!_reservation.unitVariantId && !!_reservation.unitId && !!_reservation.subscription))\n          .map(_reservation => {\n            const unitCategory = {\n              unitCategoryId: _reservation.unitCategoryId,\n              name: Object.keys(catalog).find(_unitCategoryName => Object.keys(catalog[_unitCategoryName]).some(_unitVariantName => catalog[_unitCategoryName][_unitVariantName].available.units.some(_unit => _unit.unitId === _reservation.unitId)))\n            };\n            const unitVariant = {\n              unitVariantId: _reservation.unitVariantId,\n              name: Object.keys(catalog[unitCategory.name]).find(_unitVariantName => catalog[unitCategory.name][_unitVariantName].available.units.some(_unit => _unit.unitId === _reservation.unitId))\n            };\n            const unit = {\n              unitId: _reservation.unitId,\n              name: catalog[unitCategory.name][unitVariant.name].available.units.find(_unit => _unit.unitId === _reservation.unitId).name\n            };\n            return {\n              ..._reservation,\n              unitCategory,\n              unitVariant,\n              unit\n            };\n          }\n        )\n        .sort((a, b) => (a.subscription.latest_invoice.created > b.subscription.latest_invoice.created) ? -1 : 1));\n      }\n      setIsLoading(false);\n    }\n  }, [account, catalog]);\n  \n  return (\n    <Container id=\"bookings\">\n      <h2>Bookings</h2>\n      {\n        (!!reservations && !!reservations.length)\n          ? (\n              <Accordion activeKey={activeReservation}>\n                {\n                  reservations.map((reservation, rI) => (\n                    <Card key={`r${rI}`}>\n                      <Accordion.Toggle\n                        as={Card.Header}\n                        eventKey={rI}\n                        onClick={() => {setActiveReservation(`r${rI}`)}}>\n                        Unit {reservation.unit.name}\n                        <span className=\"float-right\">\n                          {moment(reservation.from).format('MMM YYYY')} ~ {moment(reservation.to).format('MMM YYYY')}\n                        </span>\n                      </Accordion.Toggle>\n                      <Accordion.Collapse eventKey={`r${rI}`}>\n                        <Card.Body>\n                          <a className=\"float-right\" href={reservation.subscription.latest_invoice.invoice_pdf}>\n                            <FontAwesomeIcon icon={['far', 'file-pdf']} color=\"#ff3399\" />\n                          </a>\n                          <a className=\"float-right\" href={reservation.subscription.latest_invoice.hosted_invoice_url}\n                            style={{marginRight: '0.5em'}}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\">\n                            invoice\n                          </a>\n                          {\n                            (\n                              !!reservation.subscription.latest_invoice.payment_intent.charges.data\n                              && !!reservation.subscription.latest_invoice.payment_intent.charges.data.length\n                              && !!reservation.subscription.latest_invoice.payment_intent.charges.data[0].receipt_url)\n                              ? (\n                                  <a className=\"float-right\" href={reservation.subscription.latest_invoice.payment_intent.charges.data[0].receipt_url}\n                                    style={{marginRight: '0.5em'}}\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\">\n                                    receipt\n                                  </a>\n                                )\n                              : null\n                          } \n                          <Card.Title>\n                            Latest invoice\n                          </Card.Title>\n                          <Table size=\"sm\">\n                            <thead>\n                              <tr>\n                                <th className=\"text-muted\">\n                                  description\n                                </th>\n                                <th className=\"text-muted text-right\">\n                                  quantity\n                                </th>\n                                <th className=\"text-muted text-right\">\n                                  unit price\n                                </th>\n                                <th className=\"text-muted text-right\">\n                                  amount\n                                </th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              {\n                                reservation.subscription.latest_invoice.lines.data.map(line => {\n                                  //const rate = reservation.subscription.latest_invoice.default_tax_rates.find(_rate => _rate.id === tax.tax_rate);\n                                  return (\n                                    <tr key={line.subscription_item}>\n                                      <td className=\"text-muted\">\n                                        {moment(line.period.start * 1000).format('MMM-DD-YY')} ~ {moment(line.period.end * 1000).format('MMM-DD-YY')}\n                                        &nbsp;-&nbsp;\n                                        {line.price.nickname.replace('corona ', '')}\n                                      </td>\n                                      <td className=\"text-muted text-right\">\n                                        {line.quantity}\n                                      </td>\n                                      <td className=\"text-muted text-right\">\n                                        {Number.parseFloat(line.price.unit_amount / 100).toFixed(2)}\n                                      </td>\n                                      <td className=\"text-right\">\n                                        {locale['en-bg'].currency.symbol}\n                                        {Number.parseFloat(line.amount / 100).toFixed(2)} {locale['en-bg'].currency.code}\n                                      </td>\n                                    </tr>\n                                  );\n                                })\n                              }\n                              {\n                                (!!reservation.subscription.latest_invoice.discount && !!reservation.subscription.latest_invoice.discount.coupon && !!reservation.subscription.latest_invoice.discount.coupon.percent_off)\n                                  ? (\n                                      <tr className=\"active\">\n                                        <td colSpan=\"3\" className=\"text-right\">\n                                          discount: {reservation.subscription.latest_invoice.discount.coupon.name} ({reservation.subscription.latest_invoice.discount.coupon.percent_off}%)\n                                        </td>\n                                        <td className=\"text-right\">\n                                          -{locale['en-bg'].currency.symbol}\n                                          {Number.parseFloat((reservation.subscription.latest_invoice.subtotal * (reservation.subscription.latest_invoice.discount.coupon.percent_off / 100)) / 100).toFixed(2)} {locale['en-bg'].currency.code}\n                                        </td>\n                                      </tr>\n                                    )\n                                  : null\n                              }\n                              <tr>\n                                <td colSpan=\"3\" className=\"text-right\">\n                                  subtotal\n                                </td>\n                                <td className=\"text-right\">\n                                  {locale['en-bg'].currency.symbol}\n                                  {\n                                    Number.parseFloat((\n                                      (!!reservation.subscription.latest_invoice.discount && !!reservation.subscription.latest_invoice.discount.coupon && !!reservation.subscription.latest_invoice.discount.coupon.percent_off)\n                                        // subtotal - discount\n                                        ? (reservation.subscription.latest_invoice.subtotal * ((100 - reservation.subscription.latest_invoice.discount.coupon.percent_off) / 100))\n                                        // subtotal\n                                        : (reservation.subscription.latest_invoice.subtotal)\n                                    ) / 100).toFixed(2)\n                                  } {locale['en-bg'].currency.code}\n                                </td>\n                              </tr>\n                              {\n                                reservation.subscription.latest_invoice.total_tax_amounts.map(tax => {\n                                  const rate = reservation.subscription.latest_invoice.default_tax_rates.find(_rate => _rate.id === tax.tax_rate);\n                                  return (\n                                    <tr key={tax.tax_rate}>\n                                      <td colSpan=\"3\" className=\"text-muted text-right\">\n                                        {rate.display_name} - {rate.jurisdiction} ({rate.percentage}%)\n                                      </td>\n                                      <td className=\"text-right\">\n                                        {locale['en-bg'].currency.symbol}\n                                        {Number.parseFloat(tax.amount / 100).toFixed(2)} {locale['en-bg'].currency.code}\n                                      </td>\n                                    </tr>\n                                  );\n                                })\n                              }\n                              <tr>\n                                <td colSpan=\"3\" className=\"text-right\">\n                                  total\n                                </td>\n                                <td className=\"text-right\">\n                                  {locale['en-bg'].currency.symbol}\n                                  {Number.parseFloat(reservation.subscription.latest_invoice.total / 100).toFixed(2)} {locale['en-bg'].currency.code}\n                                </td>\n                              </tr>\n                              <tr>\n                                <td colSpan=\"3\" className=\"text-right\">\n                                  {\n                                    (reservation.subscription.latest_invoice.paid)\n                                      ? (\n                                          <span className=\"success\">\n                                            Payment received {moment(reservation.subscription.latest_invoice.status_transitions.paid_at * 1000).format('HH:mm DD/MM/YYYY')}, with thanks!\n                                          </span>\n                                        )\n                                      : (\n                                          <span className=\"active\">\n                                            Payment due\n                                          </span>\n                                        )\n                                  }\n                                </td>\n                                <td className=\"text-right\">\n                                  <span className={(reservation.subscription.latest_invoice.paid) ? 'success' : 'active'}>\n                                    {locale['en-bg'].currency.symbol}\n                                    {Number.parseFloat(reservation.subscription.latest_invoice.amount_paid / 100).toFixed(2)} {locale['en-bg'].currency.code}\n                                  </span>\n                                </td>\n                              </tr>\n                            </tbody>\n                          </Table>\n                          <pre>{/*JSON.stringify(reservation.subscription, null, 2)*/}</pre>\n                        </Card.Body>\n                      </Accordion.Collapse>\n                    </Card>\n                  ))\n                }\n              </Accordion>\n            )\n          : (\n              <div className=\"text-center\">\n                {\n                  isLoading\n                    ? <Spinner animation=\"border\" size=\"lg\" />\n                    : (\n                        <div>\n                          <p>no bookings found</p>\n                          <LinkContainer to=\"/book\">\n                            <Button className=\"book-now btn\">book now</Button>\n                          </LinkContainer>\n                        </div>\n                      )\n                }\n              </div>\n            )\n      }\n    </Container>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { Auth } from 'aws-amplify';\n//import { useHistory } from 'react-router-dom';\n\nexport default function Profile() {\n  //const history = useHistory();\n  const [user, setUser] = useState(undefined);\n  useEffect(() => {\n    if (!user) {\n      Auth.currentAuthenticatedUser()\n        .then(_user => {\n          setUser(_user);\n        })\n        .catch(console.log);\n    }\n  });\n\n  return (!!user)\n    ? (\n        <Container id=\"profile\">\n          <h2>Profile</h2>\n          <Row>\n            <Col className=\"text-right\">\n              name:\n            </Col>\n            <Col>\n              {user.attributes.name}\n            </Col>\n          </Row>\n          <Row>\n            <Col className=\"text-right\">\n              email:\n            </Col>\n            <Col>\n              {user.attributes.email}\n            </Col>\n          </Row>\n          <Row>\n            <Col className=\"text-right\">\n              phone:\n            </Col>\n            <Col>\n              {user.attributes.phone_number}\n            </Col>\n          </Row>\n          <Row>\n            <Col className=\"text-right\">\n              address:\n            </Col>\n            <Col>\n              {user.attributes.address}\n            </Col>\n          </Row>\n        </Container>\n      )\n    : null;\n}","import React from 'react';\n\nexport default function NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h3>Sorry, page not found!</h3>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport AuthenticatedRoute from './components/AuthenticatedRoute';\nimport UnauthenticatedRoute from './components/UnauthenticatedRoute';\nimport Home from './containers/Home';\nimport Privacy from './containers/Privacy';\nimport Terms from './containers/Terms';\nimport Login from './containers/Login';\nimport Settings from './containers/Settings';\nimport ChangeEmail from './containers/ChangeEmail';\nimport ResetPassword from './containers/ResetPassword';\nimport ChangePassword from './containers/ChangePassword';\nimport Signup from './containers/Signup';\nimport CreateBooking from './containers/CreateBooking';\nimport BookingList from './containers/BookingList';\nimport Profile from './containers/Profile';\nimport NotFound from './containers/NotFound';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nexport default function Routes() {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route exact path=\"/privacy\">\n        <Privacy />\n      </Route>\n      <Route exact path=\"/terms\">\n        <Terms />\n      </Route>\n      <UnauthenticatedRoute exact path=\"/login\">\n        <Container id=\"login\">\n          <Row>\n            <Col>\n              <Login />\n            </Col>\n            <Col>\n              <Signup />\n            </Col>\n          </Row>\n        </Container>\n      </UnauthenticatedRoute>\n      <UnauthenticatedRoute exact path=\"/login/reset\">\n        <ResetPassword />\n      </UnauthenticatedRoute>\n      <UnauthenticatedRoute exact path=\"/signup\">\n        <Container id=\"signup\">\n          <Row>\n            <Col>\n              <Login />\n            </Col>\n            <Col>\n              <Signup />\n            </Col>\n          </Row>\n        </Container>\n      </UnauthenticatedRoute>\n      <AuthenticatedRoute exact path=\"/book\">\n        <CreateBooking />\n      </AuthenticatedRoute>\n      <AuthenticatedRoute exact path=\"/bookings\">\n        <BookingList />\n      </AuthenticatedRoute>\n      <AuthenticatedRoute exact path=\"/profile\">\n        <Profile />\n      </AuthenticatedRoute>\n      <AuthenticatedRoute exact path=\"/settings\">\n        <Settings />\n      </AuthenticatedRoute>\n      <AuthenticatedRoute exact path=\"/settings/email\">\n        <ChangeEmail />\n      </AuthenticatedRoute>\n      <AuthenticatedRoute exact path=\"/settings/password\">\n        <ChangePassword />\n      </AuthenticatedRoute>\n      <Route>\n        <NotFound />\n      </Route>\n    </Switch>\n  );\n}\n","const staging = {\n  STRIPE_KEY: 'pk_test_51GskzHLWkJbcmCTlYQ1pisYlrbICWZ8bWVTNVIvU3hS6XYTYH3ls2PaxikdzE8zmJLr5VrsSp1gxTkqkMm5DV8Zf00VYAsg3zL',\n  apiGateway: {\n    REGION: 'us-east-1',\n    URL: 'https://hy1sab4b1f.execute-api.us-east-1.amazonaws.com/dev'\n  },\n};\n\nconst production = {\n  STRIPE_KEY: 'pk_test_51GskzHLWkJbcmCTlYQ1pisYlrbICWZ8bWVTNVIvU3hS6XYTYH3ls2PaxikdzE8zmJLr5VrsSp1gxTkqkMm5DV8Zf00VYAsg3zL',\n  apiGateway: {\n    REGION: 'us-east-1',\n    URL: 'https://hy1sab4b1f.execute-api.us-east-1.amazonaws.com/dev'\n  },\n};\n\nconst config = window.location.hostname === 'bearslairs.eu'\n  ? production\n  : staging;\n\nexport default {\n  env: (window.location.hostname === 'bearslairs.eu') ? 'production' : 'staging',\n  s3: {\n    REGION: 'us-east-1',\n    BUCKET: 'bearslairs-api-dev-serverlessdeploymentbucket-1tt1ibsw7svan'\n  },\n  cognito: {\n    REGION: 'us-east-1',\n    USER_POOL_ID: 'us-east-1_nhmWSzeBZ',\n    APP_CLIENT_ID: '6ejs5t57eraer0urepjm6lmi0h',\n    IDENTITY_POOL_ID: 'us-east-1:06ca8ae5-f4de-4373-8a72-de5637b22559'\n  },\n  ...config\n};\n","import React, { useState, useEffect } from 'react';\nimport { Auth } from 'aws-amplify';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport Container from 'react-bootstrap/Container';\nimport Image from 'react-bootstrap/Image';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport NavItem from 'react-bootstrap/NavItem';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Routes from './Routes';\nimport { AppContext } from './libs/contextLib';\nimport { onError } from './libs/errorLib';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { isMobile, isAndroid, isFirefox, isSafari } from 'react-device-detect';\nimport config from './config';\n\nconst environment = config.env;\n\nfunction App() {\n  const history = useHistory();\n  const location = useLocation();\n\n  const phoneNumber = '+359877804825';\n  const textMessage = encodeURI('I\\'d like to book a locker');\n  const coordinates = {\n    latitude: 41.820626,\n    longitude: 23.478217,\n    address: encodeURI('Bears Lairs, ul. \"Kosherinata\", 2770 кв. Грамадето, Bansko'),\n    waypoints: [\n      {\n        latitude: 41.820112,\n        longitude: 23.474020\n      }\n    ],\n    id: 'ChIJcywcFXevqxQRFjKaC0zq1K0'\n  };\n\n  const whatsappLink = (isMobile)\n    ? (isAndroid)\n      ? `intent://send/${phoneNumber}#Intent;scheme=smsto;package=com.whatsapp;action=android.intent.action.SENDTO;end`\n      : `https://wa.me/${phoneNumber}?text=${textMessage}`\n    : (isFirefox || isSafari)\n      ? `https://web.whatsapp.com/send?phone=${phoneNumber}&text=${textMessage}`\n      : `whatsapp://send?phone=${phoneNumber}&text=${textMessage}`;\n\n  //const viberLink = `viber://pa?chatURI=bearslairsbansko&context=enquiry&text=${textMessage}`;\n  const viberLink = (isAndroid)\n    ? `intent://send/${phoneNumber}#Intent;scheme=smsto;package=com.viber;action=android.intent.action.SENDTO;end`\n    : `viber://chat?number=${phoneNumber}&text=${textMessage}`;\n\n  const mapsLink = (isAndroid)\n    ? `intent://geo:${coordinates.latitude},${coordinates.longitude}?destination=${coordinates.address}/@${coordinates.latitude},${coordinates.longitude}&destination_place_id=${coordinates.id}&waypoints=${coordinates.waypoints.map(wp => (wp.latitude + ',' + wp.longitude)).join('|')}#Intent;scheme=directions;package=com.google.android.apps.maps;action=android.intent.action.ACTION_VIEW;end`\n    : `https://www.google.com/maps/dir/?api=1&destination=${coordinates.address}/@${coordinates.latitude},${coordinates.longitude}&destination_place_id=${coordinates.id}&waypoints=${coordinates.waypoints.map(wp => (wp.latitude + ',' + wp.longitude)).join('|')}`\n\n\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\n\n  useEffect(() => { onLoad(); }, []);\n\n  async function onLoad() {\n    try {\n      await Auth.currentSession();\n      userHasAuthenticated(true);\n    }\n    catch(e) {\n      if (e !== 'No current user') {\n        onError(e);\n      }\n    }\n    setIsAuthenticating(false);\n  }\n\n  async function handleLogout() {\n    await Auth.signOut();\n    userHasAuthenticated(false);\n    history.push('/login');\n  }\n\n  return (\n    !isAuthenticating &&\n    <>\n      <Container fluid>\n        <Row>\n          <LinkContainer to=\"/\" style={{cursor: 'pointer'}}>\n            <Image src={'/logo.png'} className=\"m-auto\" />\n          </LinkContainer>\n          {\n            (environment !== 'production')\n              ? (\n                  <span\n                    className=\"pull-right\"\n                    style={{fontSize: '2em', color: '#ff3399', marginRight: '50px'}}>\n                    {environment}\n                  </span>\n                )\n              : null\n          }\n        </Row>\n        <Navbar collapseOnSelect expand=\"lg\">\n          <Navbar.Toggle aria-controls=\"site-nav\" />\n          <Navbar.Collapse id=\"site-nav\">\n            <Nav className=\"mr-auto\">\n              {\n                (location.pathname !== '/book')\n                  ? (\n                      <LinkContainer to=\"/book\">\n                        <NavItem className=\"btn\">book now</NavItem>\n                      </LinkContainer>\n                    )\n                  : null\n              }\n            </Nav>\n          </Navbar.Collapse>\n          <span>\n            <FontAwesomeIcon className=\"fa-sm fa-flip-horizontal\" icon=\"phone\" />\n            &nbsp;\n            <span className=\"text-muted\">+359</span> <strong>(0) 877 804 825</strong>\n            &nbsp;\n            <OverlayTrigger\n              placement=\"top\"\n              delay={{ show: 250, hide: 400 }}\n              overlay={\n                <div className=\"rounded-pill\" style={{fontSize: '2em', backgroundColor: '#fff', padding: '20px'}}>\n                  <FontAwesomeIcon icon={['fab', 'viber']} color=\"#665ca7\" />\n                  &nbsp;\n                  Send us a Viber message\n                </div>\n              }>\n              <a href={viberLink}>\n                <FontAwesomeIcon icon={['fab', 'viber']} color=\"#665ca7\" />\n              </a>\n            </OverlayTrigger>\n            &nbsp;\n            &nbsp;\n            <OverlayTrigger\n              placement=\"top\"\n              delay={{ show: 250, hide: 400 }}\n              overlay={\n                <div className=\"rounded-pill\" style={{fontSize: '2em', backgroundColor: '#fff', padding: '20px'}}>\n                  <FontAwesomeIcon icon={['fab', 'whatsapp-square']} color=\"#0dc143\" />\n                  &nbsp;\n                  Send us a WhatsApp message\n                </div>\n              }>\n              <a href={whatsappLink} target=\"_blank\" rel=\"noopener noreferrer\">\n                <FontAwesomeIcon icon={['fab', 'whatsapp-square']} color=\"#0dc143\" />\n              </a>\n            </OverlayTrigger>\n            &nbsp;\n            &nbsp;\n            <OverlayTrigger\n              placement=\"top\"\n              delay={{ show: 250, hide: 400 }}\n              overlay={\n                <div className=\"rounded-pill\" style={{fontSize: '2em', backgroundColor: '#fff', padding: '20px'}}>\n                  <FontAwesomeIcon icon={['fab', 'facebook']} color=\"#4862a3\" />\n                  &nbsp;\n                  Find us on Facebook\n                </div>\n              }>\n              <a href=\"https://www.facebook.com/BearsLairsBansko\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <FontAwesomeIcon icon={['fab', 'facebook']} color=\"#4862a3\" />\n              </a>\n            </OverlayTrigger>\n            &nbsp;\n            &nbsp;\n            <OverlayTrigger\n              placement=\"top\"\n              delay={{ show: 250, hide: 400 }}\n              overlay={\n                <div className=\"rounded-pill\" style={{fontSize: '2em', backgroundColor: '#fff', padding: '20px'}}>\n                  <FontAwesomeIcon icon={['fas', 'map-marked-alt']} color=\"#cccccc\" />\n                  &nbsp;\n                  Get directions\n                </div>\n              }>\n              <a href={mapsLink} target=\"_blank\" rel=\"noopener noreferrer\">\n                <FontAwesomeIcon icon={['fas', 'map-marked-alt']} color=\"#ccccc\" />\n              </a>\n            </OverlayTrigger>\n          </span>\n          <NavDropdown\n            className=\"pull-right\"\n            title={\n              <FontAwesomeIcon className=\"fa-sm\" icon={[(isAuthenticated ? 'fas' : 'far'), 'user']} />\n            }\n            drop=\"left\">\n            {\n              isAuthenticated\n                ? (\n                    <>\n                      <LinkContainer to=\"/bookings\">\n                        <NavDropdown.Item>bookings</NavDropdown.Item>\n                      </LinkContainer>\n                      <LinkContainer to=\"/profile\">\n                        <NavDropdown.Item>profile</NavDropdown.Item>\n                      </LinkContainer>\n                      <LinkContainer to=\"/settings/password\">\n                        <NavDropdown.Item>\n                          change password\n                        </NavDropdown.Item>\n                      </LinkContainer>\n                      <NavDropdown.Divider />\n                      <NavDropdown.Item onClick={handleLogout}>\n                        log-out\n                      </NavDropdown.Item>\n                    </>\n                  )\n                : <>\n                    <LinkContainer to=\"/signup\">\n                      <NavDropdown.Item>\n                        sign-up\n                      </NavDropdown.Item>\n                    </LinkContainer>\n                    <LinkContainer to=\"/login\">\n                      <NavDropdown.Item>\n                        log-in\n                      </NavDropdown.Item>\n                    </LinkContainer>\n                  </>\n            }\n          </NavDropdown>\n        </Navbar>\n      </Container>\n      <AppContext.Provider value={{ isAuthenticated, userHasAuthenticated }}>\n        <Routes />\n      </AppContext.Provider>\n      <Container id=\"footer\" fluid>\n        <Container>\n          <Row className=\"justify-content-xl-center justify-content-md-center\">\n            <Col xl={6}>\n              <LinkContainer to=\"/privacy\">\n                <NavItem as=\"a\">\n                  privacy\n                </NavItem>\n              </LinkContainer>\n              &nbsp;|&nbsp;\n              <LinkContainer to=\"/terms\">\n                <NavItem as=\"a\">\n                  terms and conditions\n                </NavItem>\n              </LinkContainer>\n              &nbsp;|&nbsp;\n              <a href=\"mailto:info@bearslairs.eu\">info@bearslairs.eu</a>\n              <hr />\n              &copy; 2020, Bears Lairs EOOD, Bulgaria. All rights reserved\n            </Col>\n          </Row>\n        </Container>\n      </Container>\n    </>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport 'typeface-roboto';\nimport App from './App';\nimport { Amplify } from 'aws-amplify';\nimport {Elements} from '@stripe/react-stripe-js';\nimport {loadStripe} from '@stripe/stripe-js';\nimport config from './config';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faFilePdf, faUser as farUser } from '@fortawesome/free-regular-svg-icons';\nimport { faPhone, faMapMarkedAlt, faUser as fasUser } from '@fortawesome/free-solid-svg-icons';\nimport { faFacebook, faWhatsappSquare, faViber } from '@fortawesome/free-brands-svg-icons';\n//import { fas } from '@fortawesome/free-solid-svg-icons';\n//import { fab } from '@fortawesome/free-brands-svg-icons';\nimport * as serviceWorker from './serviceWorker';\n\n//library.add(fas, fab);\nlibrary.add(faPhone, faFacebook, faWhatsappSquare, faViber, faFilePdf, faMapMarkedAlt, farUser, fasUser);\n\nconst stripePromise = loadStripe(config.STRIPE_KEY);\n\nAmplify.configure({\n  Auth: {\n    mandatorySignIn: true,\n    region: config.cognito.REGION,\n    userPoolId: config.cognito.USER_POOL_ID,\n    identityPoolId: config.cognito.IDENTITY_POOL_ID,\n    userPoolWebClientId: config.cognito.APP_CLIENT_ID\n  },\n  Storage: {\n    region: config.s3.REGION,\n    bucket: config.s3.BUCKET,\n    identityPoolId: config.cognito.IDENTITY_POOL_ID\n  },\n  API: {\n    endpoints: [\n      {\n        name: 'limelockers',\n        endpoint: config.apiGateway.URL,\n        region: config.apiGateway.REGION\n      }\n    ]\n  }\n});\n\nReactDOM.render(\n  <Router>\n    <Elements stripe={stripePromise}>\n      <App />\n    </Elements>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}